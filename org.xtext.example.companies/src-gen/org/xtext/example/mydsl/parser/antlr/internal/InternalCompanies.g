/*
 * generated by Xtext
 */
grammar InternalCompanies;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.CompaniesGrammarAccess;

}

@parser::members {

 	private CompaniesGrammarAccess grammarAccess;
 	
    public InternalCompaniesParser(TokenStream input, CompaniesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "company";	
   	}
   	
   	@Override
   	protected CompaniesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulecompany
entryRulecompany returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompanyRule()); }
	 iv_rulecompany=rulecompany 
	 { $current=$iv_rulecompany.current; } 
	 EOF 
;

// Rule company
rulecompany returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='company' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompanyAccess().getCompanyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCompanyAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompanyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompanyAccess().getDeparmentDepartmentParserRuleCall_3_0()); 
	    }
		lv_deparment_3_0=ruledepartment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompanyRule());
	        }
       		add(
       			$current, 
       			"deparment",
        		lv_deparment_3_0, 
        		"department");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuledepartment
entryRuledepartment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDepartmentRule()); }
	 iv_ruledepartment=ruledepartment 
	 { $current=$iv_ruledepartment.current; } 
	 EOF 
;

// Rule department
ruledepartment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='department' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDepartmentAccess().getDepartmentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDepartmentAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDepartmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDepartmentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getDepartment_managerDepartment_managerParserRuleCall_3_0()); 
	    }
		lv_department_manager_3_0=ruledepartment_manager		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		set(
       			$current, 
       			"department_manager",
        		lv_department_manager_3_0, 
        		"department_manager");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getDepartment_employeesDepartment_employeesParserRuleCall_4_0()); 
	    }
		lv_department_employees_4_0=ruledepartment_employees		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		set(
       			$current, 
       			"department_employees",
        		lv_department_employees_4_0, 
        		"department_employees");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartmentAccess().getDeparmentDepartmentParserRuleCall_5_0()); 
	    }
		lv_deparment_5_0=ruledepartment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartmentRule());
	        }
       		add(
       			$current, 
       			"deparment",
        		lv_deparment_5_0, 
        		"department");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDepartmentAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuledepartment_manager
entryRuledepartment_manager returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDepartment_managerRule()); }
	 iv_ruledepartment_manager=ruledepartment_manager 
	 { $current=$iv_ruledepartment_manager.current; } 
	 EOF 
;

// Rule department_manager
ruledepartment_manager returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='manager' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDepartment_managerAccess().getManagerKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartment_managerAccess().getEmployeeEmployeeParserRuleCall_1_0()); 
	    }
		lv_employee_1_0=ruleemployee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartment_managerRule());
	        }
       		set(
       			$current, 
       			"employee",
        		lv_employee_1_0, 
        		"employee");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledepartment_employees
entryRuledepartment_employees returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDepartment_employeesRule()); }
	 iv_ruledepartment_employees=ruledepartment_employees 
	 { $current=$iv_ruledepartment_employees.current; } 
	 EOF 
;

// Rule department_employees
ruledepartment_employees returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDepartment_employeesAccess().getDepartment_employeesAction_0(),
            $current);
    }
)(	otherlv_1='employee' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDepartment_employeesAccess().getEmployeeKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDepartment_employeesAccess().getEmployeeEmployeeParserRuleCall_1_1_0()); 
	    }
		lv_employee_2_0=ruleemployee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDepartment_employeesRule());
	        }
       		add(
       			$current, 
       			"employee",
        		lv_employee_2_0, 
        		"employee");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleemployee
entryRuleemployee returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	 iv_ruleemployee=ruleemployee 
	 { $current=$iv_ruleemployee.current; } 
	 EOF 
;

// Rule employee
ruleemployee returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEmployeeAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmployeeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='address' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmployeeAccess().getAddressKeyword_2());
    }
(
(
		lv_address_3_0=RULE_STRING
		{
			newLeafNode(lv_address_3_0, grammarAccess.getEmployeeAccess().getAddressSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"address",
        		lv_address_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='salary' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEmployeeAccess().getSalaryKeyword_4());
    }
(
(
		lv_salary_5_0=RULE_FLOAT
		{
			newLeafNode(lv_salary_5_0, grammarAccess.getEmployeeAccess().getSalaryFLOATTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"salary",
        		lv_salary_5_0, 
        		"FLOAT");
	    }

)
)(	otherlv_6='mentor' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEmployeeAccess().getMentorKeyword_6_0());
    }
(
(
		lv_mentor_7_0=RULE_STRING
		{
			newLeafNode(lv_mentor_7_0, grammarAccess.getEmployeeAccess().getMentorSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mentor",
        		lv_mentor_7_0, 
        		"STRING");
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEmployeeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





RULE_STRING : '"' ~('"')* '"';

RULE_FLOAT : ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_WS : (' '|'\r'? '\n'|'\t')+;


