module names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/CompaniesTest


signature
  constructors
    NablNsCompany    : Namespace
    NablNsDepartment : Namespace
    NablNsEmployee   : Namespace


signature
  constructors
    


rules

  nabl-custom-properties(add-properties) =
    ![] ; add-properties


rules

  nabl-get-name :
    Company(c, _) -> c

  nabl-name-apply(s) =
    Company(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Company(c, _)
    ; origin-track-forced(
        Company(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsCompany()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Department(d, _, _, _) -> d

  nabl-name-apply(s) =
    Department(s, id, id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Department(d, _, _, _)
    ; origin-track-forced(
        Department(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsDepartment()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        , id
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Employee(e, _, _, _) -> e

  nabl-name-apply(s) =
    Employee(s, id, id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Employee(e, _, _, _)
    ; origin-track-forced(
        Employee(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsEmployee()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        , id
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Mentor(m) -> m

  nabl-name-apply(s) =
    Mentor(s)

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Mentor(m)
    ; origin-track-forced(
        Mentor(
          nabl-use(
          | lang__
          , ctx__
          , uniques__
          , uris__
          , [ <{:
                 id
                 ; !UseCandidate(
                      NablNsEmployee()
                    , []
                    , Current()
                    , True()
                    , []
                    )
               }>
            ]
          )
        )
      |
      )