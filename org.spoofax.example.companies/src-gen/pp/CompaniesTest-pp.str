module src-gen/pp/CompaniesTest-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  trans/pp
  src-gen/signatures/CompaniesTest-sig


imports
  src-gen/signatures/Common-sig


imports
  src-gen/pp/Common-pp


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-Start


strategies
  prettyprint-example =
    prettyprint-Start

  prettyprint-example =
    prettyprint-Dept

  prettyprint-example =
    prettyprint-DeptManager

  prettyprint-example =
    prettyprint-DeptEmployee

  prettyprint-example =
    prettyprint-Employee

  prettyprint-example =
    prettyprint-Mentor

  prettyprint-Start :
    Company(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ S("company ")
                               , t1__'
                               , S(" {")
                               ]
                             )
                           , t2__'
                           , H(
                               [SOpt(HS(), "0")]
                             , [S("}")]
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-STRING)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Dept)> t2__]

  is-Start =
    ?Company(_, _)

  prettyprint-Dept :
    Department(t1__, t2__, t3__, t4__) -> [ H(
                                              [SOpt(HS(), "0")]
                                            , [ S("department ")
                                              , t1__'
                                              , S(" {")
                                              ]
                                            )
                                          , t2__'
                                          , t3__'
                                          , t4__'
                                          , H(
                                              [SOpt(HS(), "0")]
                                            , [S("}")]
                                            )
                                          ]
    with t1__' := <pp-one-Z(prettyprint-STRING)> t1__
    with t2__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-DeptManager)> t2__]
    with t3__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-DeptEmployee)> t3__]
    with t4__' := <pp-indent(|"2")> [<pp-H-list(prettyprint-Dept)> t4__]

  is-Dept =
    ?Department(_, _, _, _)

  prettyprint-DeptManager :
    DeptManager(t1__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("manager "), t1__']
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Employee)> t1__

  is-DeptManager =
    ?DeptManager(_)

  prettyprint-DeptEmployee :
    DeptEmployee(t1__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("employee "), t1__']
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-Employee)> t1__

  is-DeptEmployee =
    ?DeptEmployee(_)

  prettyprint-Employee :
    Employee(t1__, t2__, t3__, t4__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [t1__', S(" {")]
                                          )
                                        , t2__'
                                        , t3__'
                                        , t4__'
                                        , H(
                                            [SOpt(HS(), "0")]
                                          , [S("}")]
                                          )
                                        ]
    with t1__' := <pp-one-Z(prettyprint-STRING)> t1__
    with t2__' := <pp-indent(|"2")> [ S("address ")
                                    , <pp-one-Z(prettyprint-STRING)> t2__
                                    ]
    with t3__' := <pp-indent(|"2")> [ S("salary ")
                                    , <pp-one-Z(prettyprint-FLOAT)> t3__
                                    ]
    with t4__' := <pp-indent(|"2")> [<pp-option(pp-one-Z(prettyprint-Mentor))> t4__]

  is-Employee =
    ?Employee(_, _, _, _)

  prettyprint-Mentor :
    Mentor(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("mentor "), t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-STRING)> t1__

  is-Mentor =
    ?Mentor(_)

  is-Start =
    fail

  is-Dept =
    fail

  is-DeptManager =
    fail

  is-DeptEmployee =
    fail

  is-Employee =
    fail

  is-Mentor =
    fail

  prettyprint-Start :
    amb([h|hs]) -> <prettyprint-Start> h

  prettyprint-Dept :
    amb([h|hs]) -> <prettyprint-Dept> h

  prettyprint-DeptManager :
    amb([h|hs]) -> <prettyprint-DeptManager> h

  prettyprint-DeptEmployee :
    amb([h|hs]) -> <prettyprint-DeptEmployee> h

  prettyprint-Employee :
    amb([h|hs]) -> <prettyprint-Employee> h

  prettyprint-Mentor :
    amb([h|hs]) -> <prettyprint-Mentor> h