/*
 * generated by Xtext
 */
package uk.ac.york.cs.cs2as.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import uk.ac.york.cs.cs2as.services.CS2ASDSLGrammarAccess;

public class CS2ASDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private CS2ASDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected uk.ac.york.cs.cs2as.ui.contentassist.antlr.internal.InternalCS2ASDSLParser createParser() {
		uk.ac.york.cs.cs2as.ui.contentassist.antlr.internal.InternalCS2ASDSLParser result = new uk.ac.york.cs.cs2as.ui.contentassist.antlr.internal.InternalCS2ASDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMappingDefAccess().getAlternatives(), "rule__MappingDef__Alternatives");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getAlternatives_2(), "rule__CurrentScopeProvisionDef__Alternatives_2");
					put(grammarAccess.getSelectionDefAccess().getAlternatives_1(), "rule__SelectionDef__Alternatives_1");
					put(grammarAccess.getContributionAccess().getAlternatives_0(), "rule__Contribution__Alternatives_0");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getLookupExpCSAccess().getAlternatives_0(), "rule__LookupExpCS__Alternatives_0");
					put(grammarAccess.getEssentialOCLReservedKeywordAccess().getAlternatives(), "rule__EssentialOCLReservedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getAlternatives(), "rule__EssentialOCLUnaryOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAlternatives(), "rule__EssentialOCLInfixOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getAlternatives(), "rule__EssentialOCLNavigationOperatorName__Alternatives");
					put(grammarAccess.getBinaryOperatorNameAccess().getAlternatives(), "rule__BinaryOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives(), "rule__URIFirstPathElementCS__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getAlternatives(), "rule__CollectionLiteralPartCS__Alternatives");
					put(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAlternatives_2_0(), "rule__ShadowPartCS__OwnedInitExpressionAlternatives_2_0");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives_0(), "rule__TypeExpCS__Alternatives_0");
					put(grammarAccess.getExpCSAccess().getAlternatives(), "rule__ExpCS__Alternatives");
					put(grammarAccess.getPrefixedLetExpCSAccess().getAlternatives(), "rule__PrefixedLetExpCS__Alternatives");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getAlternatives(), "rule__PrefixedPrimaryExpCS__Alternatives");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getAlternatives_2(), "rule__CurlyBracketedClauseCS__Alternatives_2");
					put(grammarAccess.getNavigatingArgCSAccess().getAlternatives(), "rule__NavigatingArgCS__Alternatives");
					put(grammarAccess.getNavigatingArgCSAccess().getAlternatives_0_1(), "rule__NavigatingArgCS__Alternatives_0_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getAlternatives_2(), "rule__NavigatingCommaArgCS__Alternatives_2");
					put(grammarAccess.getIfExpCSAccess().getOwnedConditionAlternatives_1_0(), "rule__IfExpCS__OwnedConditionAlternatives_1_0");
					put(grammarAccess.getMultiplicityCSAccess().getAlternatives_1(), "rule__MultiplicityCS__Alternatives_1");
					put(grammarAccess.getMultiplicityCSAccess().getAlternatives_2(), "rule__MultiplicityCS__Alternatives_2");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getTypeRefCSAccess().getAlternatives(), "rule__TypeRefCS__Alternatives");
					put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
					put(grammarAccess.getUPPERAccess().getAlternatives(), "rule__UPPER__Alternatives");
					put(grammarAccess.getCS2ASModelAccess().getGroup(), "rule__CS2ASModel__Group__0");
					put(grammarAccess.getSourceDomainAccess().getGroup(), "rule__SourceDomain__Group__0");
					put(grammarAccess.getSourceDomainAccess().getGroup_2(), "rule__SourceDomain__Group_2__0");
					put(grammarAccess.getTargetDomainAccess().getGroup(), "rule__TargetDomain__Group__0");
					put(grammarAccess.getTargetDomainAccess().getGroup_2(), "rule__TargetDomain__Group_2__0");
					put(grammarAccess.getMetaModelDeclAccess().getGroup(), "rule__MetaModelDecl__Group__0");
					put(grammarAccess.getMetaModelDeclAccess().getGroup_0(), "rule__MetaModelDecl__Group_0__0");
					put(grammarAccess.getMappingSectAccess().getGroup(), "rule__MappingSect__Group__0");
					put(grammarAccess.getMappingCreationAccess().getGroup(), "rule__MappingCreation__Group__0");
					put(grammarAccess.getMappingCreationAccess().getGroup_4(), "rule__MappingCreation__Group_4__0");
					put(grammarAccess.getPropertyDefAccess().getGroup(), "rule__PropertyDef__Group__0");
					put(grammarAccess.getMappingReferenceAccess().getGroup(), "rule__MappingReference__Group__0");
					put(grammarAccess.getDisambiguationSectAccess().getGroup(), "rule__DisambiguationSect__Group__0");
					put(grammarAccess.getDisambiguationDefAccess().getGroup(), "rule__DisambiguationDef__Group__0");
					put(grammarAccess.getDisambiguationRuleAccess().getGroup(), "rule__DisambiguationRule__Group__0");
					put(grammarAccess.getNameResolutionSectAccess().getGroup(), "rule__NameResolutionSect__Group__0");
					put(grammarAccess.getTargetsAccess().getGroup(), "rule__Targets__Group__0");
					put(grammarAccess.getTargetAccess().getGroup(), "rule__Target__Group__0");
					put(grammarAccess.getTargetAccess().getGroup_1(), "rule__Target__Group_1__0");
					put(grammarAccess.getEscapeSequenceDefAccess().getGroup(), "rule__EscapeSequenceDef__Group__0");
					put(grammarAccess.getEscapeSequenceDefAccess().getGroup_2(), "rule__EscapeSequenceDef__Group_2__0");
					put(grammarAccess.getEscapeSequenceAccess().getGroup(), "rule__EscapeSequence__Group__0");
					put(grammarAccess.getEscapeSequenceAccess().getGroup_1(), "rule__EscapeSequence__Group_1__0");
					put(grammarAccess.getInputsAccess().getGroup(), "rule__Inputs__Group__0");
					put(grammarAccess.getInputAccess().getGroup(), "rule__Input__Group__0");
					put(grammarAccess.getInputAccess().getGroup_2(), "rule__Input__Group_2__0");
					put(grammarAccess.getProvidersAccess().getGroup(), "rule__Providers__Group__0");
					put(grammarAccess.getProviderAccess().getGroup(), "rule__Provider__Group__0");
					put(grammarAccess.getProviderVarsDeclAccess().getGroup(), "rule__ProviderVarsDecl__Group__0");
					put(grammarAccess.getProviderVarsDeclAccess().getGroup_2(), "rule__ProviderVarsDecl__Group_2__0");
					put(grammarAccess.getFilterDefAccess().getGroup(), "rule__FilterDef__Group__0");
					put(grammarAccess.getFilterDefAccess().getGroup_2(), "rule__FilterDef__Group_2__0");
					put(grammarAccess.getQualificationDefAccess().getGroup(), "rule__QualificationDef__Group__0");
					put(grammarAccess.getQualificationDefAccess().getGroup_2(), "rule__QualificationDef__Group_2__0");
					put(grammarAccess.getQualificationAccess().getGroup(), "rule__Qualification__Group__0");
					put(grammarAccess.getQualificationAccess().getGroup_3(), "rule__Qualification__Group_3__0");
					put(grammarAccess.getCurrentScopeDeclAccess().getGroup(), "rule__CurrentScopeDecl__Group__0");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getGroup(), "rule__CurrentScopeProvisionDef__Group__0");
					put(grammarAccess.getSelectionDefAccess().getGroup(), "rule__SelectionDef__Group__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_0(), "rule__SelectionDef__Group_1_0__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_0_2(), "rule__SelectionDef__Group_1_0_2__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_0_2_2(), "rule__SelectionDef__Group_1_0_2_2__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_1(), "rule__SelectionDef__Group_1_1__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_1_1(), "rule__SelectionDef__Group_1_1_1__0");
					put(grammarAccess.getSelectionDefAccess().getGroup_1_1_1_1(), "rule__SelectionDef__Group_1_1_1_1__0");
					put(grammarAccess.getProvisionAccess().getGroup(), "rule__Provision__Group__0");
					put(grammarAccess.getProvisionAccess().getGroup_0(), "rule__Provision__Group_0__0");
					put(grammarAccess.getMultiplePathNamesAccess().getGroup(), "rule__MultiplePathNames__Group__0");
					put(grammarAccess.getMultiplePathNamesAccess().getGroup_1(), "rule__MultiplePathNames__Group_1__0");
					put(grammarAccess.getOccludingDefAccess().getGroup(), "rule__OccludingDef__Group__0");
					put(grammarAccess.getContributionsDefAccess().getGroup(), "rule__ContributionsDef__Group__0");
					put(grammarAccess.getContributionsDefAccess().getGroup_1(), "rule__ContributionsDef__Group_1__0");
					put(grammarAccess.getContributionAccess().getGroup(), "rule__Contribution__Group__0");
					put(grammarAccess.getContributionAccess().getGroup_0_0(), "rule__Contribution__Group_0_0__0");
					put(grammarAccess.getContributionAccess().getGroup_0_2(), "rule__Contribution__Group_0_2__0");
					put(grammarAccess.getContributionAccess().getGroup_0_2_1(), "rule__Contribution__Group_0_2_1__0");
					put(grammarAccess.getContributionAccess().getGroup_0_2_1_1(), "rule__Contribution__Group_0_2_1_1__0");
					put(grammarAccess.getContributionAccess().getGroup_0_3(), "rule__Contribution__Group_0_3__0");
					put(grammarAccess.getExportedScopeDeclAccess().getGroup(), "rule__ExportedScopeDecl__Group__0");
					put(grammarAccess.getExportedScopeProvisionDefAccess().getGroup(), "rule__ExportedScopeProvisionDef__Group__0");
					put(grammarAccess.getHelpersSectAccess().getGroup(), "rule__HelpersSect__Group__0");
					put(grammarAccess.getHelperClassAccess().getGroup(), "rule__HelperClass__Group__0");
					put(grammarAccess.getHelperOpAccess().getGroup(), "rule__HelperOp__Group__0");
					put(grammarAccess.getHelperOpAccess().getGroup_3(), "rule__HelperOp__Group_3__0");
					put(grammarAccess.getHelperOpAccess().getGroup_3_1(), "rule__HelperOp__Group_3_1__0");
					put(grammarAccess.getHelperOpAccess().getGroup_5(), "rule__HelperOp__Group_5__0");
					put(grammarAccess.getParameterDefAccess().getGroup(), "rule__ParameterDef__Group__0");
					put(grammarAccess.getTraceExpCSAccess().getGroup(), "rule__TraceExpCS__Group__0");
					put(grammarAccess.getLookupExpCSAccess().getGroup(), "rule__LookupExpCS__Group__0");
					put(grammarAccess.getLookupExpCSAccess().getGroup_3(), "rule__LookupExpCS__Group_3__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup(), "rule__URIPathNameCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup_1(), "rule__URIPathNameCS__Group_1__0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1(), "rule__URIFirstPathElementCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getMapTypeCSAccess().getGroup(), "rule__MapTypeCS__Group__0");
					put(grammarAccess.getMapTypeCSAccess().getGroup_1(), "rule__MapTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0(), "rule__CollectionLiteralPartCS__Group_0__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0_1(), "rule__CollectionLiteralPartCS__Group_0_1__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup(), "rule__CollectionPatternCS__Group__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2(), "rule__CollectionPatternCS__Group_2__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2_1(), "rule__CollectionPatternCS__Group_2_1__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2_2(), "rule__CollectionPatternCS__Group_2_2__0");
					put(grammarAccess.getShadowPartCSAccess().getGroup(), "rule__ShadowPartCS__Group__0");
					put(grammarAccess.getPatternExpCSAccess().getGroup(), "rule__PatternExpCS__Group__0");
					put(grammarAccess.getLambdaLiteralExpCSAccess().getGroup(), "rule__LambdaLiteralExpCS__Group__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup(), "rule__MapLiteralExpCS__Group__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup_2(), "rule__MapLiteralExpCS__Group_2__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup_2_1(), "rule__MapLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getMapLiteralPartCSAccess().getGroup(), "rule__MapLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup(), "rule__TypeNameExpCS__Group__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_1(), "rule__TypeNameExpCS__Group_1__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_1_1(), "rule__TypeNameExpCS__Group_1_1__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getExpCSAccess().getGroup_0(), "rule__ExpCS__Group_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1(), "rule__ExpCS__Group_0_1__0");
					put(grammarAccess.getPrefixedLetExpCSAccess().getGroup_0(), "rule__PrefixedLetExpCS__Group_0__0");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getGroup_0(), "rule__PrefixedPrimaryExpCS__Group_0__0");
					put(grammarAccess.getNameExpCSAccess().getGroup(), "rule__NameExpCS__Group__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_4(), "rule__NameExpCS__Group_4__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup(), "rule__CurlyBracketedClauseCS__Group__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0(), "rule__CurlyBracketedClauseCS__Group_2_0__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0_1(), "rule__CurlyBracketedClauseCS__Group_2_0_1__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup(), "rule__RoundBracketedClauseCS__Group__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2(), "rule__RoundBracketedClauseCS__Group_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_2(), "rule__RoundBracketedClauseCS__Group_2_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_3(), "rule__RoundBracketedClauseCS__Group_2_3__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup(), "rule__SquareBracketedClauseCS__Group__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup_2(), "rule__SquareBracketedClauseCS__Group_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0(), "rule__NavigatingArgCS__Group_0__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0(), "rule__NavigatingArgCS__Group_0_1_0__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0_2(), "rule__NavigatingArgCS__Group_0_1_0_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_1(), "rule__NavigatingArgCS__Group_0_1_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0(), "rule__NavigatingCommaArgCS__Group_2_0__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0_2(), "rule__NavigatingCommaArgCS__Group_2_0_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_1(), "rule__NavigatingCommaArgCS__Group_2_1__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getElseIfThenExpCSAccess().getGroup(), "rule__ElseIfThenExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_2(), "rule__LetVariableCS__Group_2__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup(), "rule__TemplateBindingCS__Group__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup_1(), "rule__TemplateBindingCS__Group_1__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup(), "rule__TemplateSignatureCS__Group__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup_2(), "rule__TemplateSignatureCS__Group_2__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup(), "rule__TypeParameterCS__Group__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1(), "rule__TypeParameterCS__Group_1__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1_2(), "rule__TypeParameterCS__Group_1_2__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup(), "rule__TypedTypeRefCS__Group__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup_1(), "rule__TypedTypeRefCS__Group_1__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup(), "rule__WildcardTypeRefCS__Group__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2(), "rule__WildcardTypeRefCS__Group_2__0");
					put(grammarAccess.getCS2ASModelAccess().getSourceAssignment_0(), "rule__CS2ASModel__SourceAssignment_0");
					put(grammarAccess.getCS2ASModelAccess().getTargetAssignment_1(), "rule__CS2ASModel__TargetAssignment_1");
					put(grammarAccess.getCS2ASModelAccess().getMappingSectAssignment_2_0(), "rule__CS2ASModel__MappingSectAssignment_2_0");
					put(grammarAccess.getCS2ASModelAccess().getDisambiguationSectAssignment_2_1(), "rule__CS2ASModel__DisambiguationSectAssignment_2_1");
					put(grammarAccess.getCS2ASModelAccess().getNameresoSectAssignment_2_2(), "rule__CS2ASModel__NameresoSectAssignment_2_2");
					put(grammarAccess.getCS2ASModelAccess().getHelpersSectAssignment_2_3(), "rule__CS2ASModel__HelpersSectAssignment_2_3");
					put(grammarAccess.getSourceDomainAccess().getMetamodelsAssignment_1(), "rule__SourceDomain__MetamodelsAssignment_1");
					put(grammarAccess.getSourceDomainAccess().getMetamodelsAssignment_2_1(), "rule__SourceDomain__MetamodelsAssignment_2_1");
					put(grammarAccess.getTargetDomainAccess().getMetamodelsAssignment_1(), "rule__TargetDomain__MetamodelsAssignment_1");
					put(grammarAccess.getTargetDomainAccess().getMetamodelsAssignment_2_1(), "rule__TargetDomain__MetamodelsAssignment_2_1");
					put(grammarAccess.getMetaModelDeclAccess().getNameAssignment_0_0(), "rule__MetaModelDecl__NameAssignment_0_0");
					put(grammarAccess.getMetaModelDeclAccess().getOwnedPathNameAssignment_1(), "rule__MetaModelDecl__OwnedPathNameAssignment_1");
					put(grammarAccess.getMetaModelDeclAccess().getIsAllAssignment_2(), "rule__MetaModelDecl__IsAllAssignment_2");
					put(grammarAccess.getMappingSectAccess().getMappingsAssignment_3(), "rule__MappingSect__MappingsAssignment_3");
					put(grammarAccess.getMappingCreationAccess().getToAssignment_1(), "rule__MappingCreation__ToAssignment_1");
					put(grammarAccess.getMappingCreationAccess().getFromAssignment_3(), "rule__MappingCreation__FromAssignment_3");
					put(grammarAccess.getMappingCreationAccess().getRuleAssignment_4_1(), "rule__MappingCreation__RuleAssignment_4_1");
					put(grammarAccess.getMappingCreationAccess().getPropertiesAssignment_6(), "rule__MappingCreation__PropertiesAssignment_6");
					put(grammarAccess.getPropertyDefAccess().getRedefineAssignment_0(), "rule__PropertyDef__RedefineAssignment_0");
					put(grammarAccess.getPropertyDefAccess().getPropRefAssignment_1(), "rule__PropertyDef__PropRefAssignment_1");
					put(grammarAccess.getPropertyDefAccess().getPropInitAssignment_3(), "rule__PropertyDef__PropInitAssignment_3");
					put(grammarAccess.getMappingReferenceAccess().getToAssignment_1(), "rule__MappingReference__ToAssignment_1");
					put(grammarAccess.getMappingReferenceAccess().getFromAssignment_3(), "rule__MappingReference__FromAssignment_3");
					put(grammarAccess.getMappingReferenceAccess().getExpressionAssignment_5(), "rule__MappingReference__ExpressionAssignment_5");
					put(grammarAccess.getDisambiguationSectAccess().getDisambiguationsAssignment_3(), "rule__DisambiguationSect__DisambiguationsAssignment_3");
					put(grammarAccess.getDisambiguationDefAccess().getClassRefAssignment_0(), "rule__DisambiguationDef__ClassRefAssignment_0");
					put(grammarAccess.getDisambiguationDefAccess().getRulesAssignment_2(), "rule__DisambiguationDef__RulesAssignment_2");
					put(grammarAccess.getDisambiguationRuleAccess().getNameAssignment_0(), "rule__DisambiguationRule__NameAssignment_0");
					put(grammarAccess.getDisambiguationRuleAccess().getExpAssignment_2(), "rule__DisambiguationRule__ExpAssignment_2");
					put(grammarAccess.getNameResolutionSectAccess().getTargetsDefAssignment_3(), "rule__NameResolutionSect__TargetsDefAssignment_3");
					put(grammarAccess.getNameResolutionSectAccess().getInputsDefAssignment_4(), "rule__NameResolutionSect__InputsDefAssignment_4");
					put(grammarAccess.getNameResolutionSectAccess().getProvidersDefAssignment_5(), "rule__NameResolutionSect__ProvidersDefAssignment_5");
					put(grammarAccess.getTargetsAccess().getTargetsAssignment_3(), "rule__Targets__TargetsAssignment_3");
					put(grammarAccess.getTargetAccess().getClassRefAssignment_0(), "rule__Target__ClassRefAssignment_0");
					put(grammarAccess.getTargetAccess().getPropRefAssignment_1_1(), "rule__Target__PropRefAssignment_1_1");
					put(grammarAccess.getTargetAccess().getIgnoreCaseAssignment_1_2(), "rule__Target__IgnoreCaseAssignment_1_2");
					put(grammarAccess.getTargetAccess().getEscapeSeqDefAssignment_1_3(), "rule__Target__EscapeSeqDefAssignment_1_3");
					put(grammarAccess.getTargetAccess().getFilterAssignment_2(), "rule__Target__FilterAssignment_2");
					put(grammarAccess.getTargetAccess().getQualificationAssignment_3(), "rule__Target__QualificationAssignment_3");
					put(grammarAccess.getEscapeSequenceDefAccess().getEscapesAssignment_1(), "rule__EscapeSequenceDef__EscapesAssignment_1");
					put(grammarAccess.getEscapeSequenceDefAccess().getEscapesAssignment_2_1(), "rule__EscapeSequenceDef__EscapesAssignment_2_1");
					put(grammarAccess.getEscapeSequenceAccess().getPrefixAssignment_0(), "rule__EscapeSequence__PrefixAssignment_0");
					put(grammarAccess.getEscapeSequenceAccess().getSuffixAssignment_1_1(), "rule__EscapeSequence__SuffixAssignment_1_1");
					put(grammarAccess.getInputsAccess().getInputsAssignment_3(), "rule__Inputs__InputsAssignment_3");
					put(grammarAccess.getInputAccess().getQualifierAssignment_0(), "rule__Input__QualifierAssignment_0");
					put(grammarAccess.getInputAccess().getTypeRefAssignment_1(), "rule__Input__TypeRefAssignment_1");
					put(grammarAccess.getInputAccess().getPropRefAssignment_2_1(), "rule__Input__PropRefAssignment_2_1");
					put(grammarAccess.getProvidersAccess().getProvidersAssignment_3(), "rule__Providers__ProvidersAssignment_3");
					put(grammarAccess.getProviderAccess().getClassRefAssignment_0(), "rule__Provider__ClassRefAssignment_0");
					put(grammarAccess.getProviderAccess().getVarsDeclAssignment_2(), "rule__Provider__VarsDeclAssignment_2");
					put(grammarAccess.getProviderAccess().getCurrentScopeAssignment_3(), "rule__Provider__CurrentScopeAssignment_3");
					put(grammarAccess.getProviderAccess().getExportedScopeAssignment_4(), "rule__Provider__ExportedScopeAssignment_4");
					put(grammarAccess.getProviderVarsDeclAccess().getVarDeclAssignment_1(), "rule__ProviderVarsDecl__VarDeclAssignment_1");
					put(grammarAccess.getProviderVarsDeclAccess().getVarDeclAssignment_2_1(), "rule__ProviderVarsDecl__VarDeclAssignment_2_1");
					put(grammarAccess.getFilterDefAccess().getParamsAssignment_1(), "rule__FilterDef__ParamsAssignment_1");
					put(grammarAccess.getFilterDefAccess().getParamsAssignment_2_1(), "rule__FilterDef__ParamsAssignment_2_1");
					put(grammarAccess.getFilterDefAccess().getExpressionAssignment_4(), "rule__FilterDef__ExpressionAssignment_4");
					put(grammarAccess.getQualificationDefAccess().getQualificationsAssignment_1(), "rule__QualificationDef__QualificationsAssignment_1");
					put(grammarAccess.getQualificationDefAccess().getQualificationsAssignment_2_1(), "rule__QualificationDef__QualificationsAssignment_2_1");
					put(grammarAccess.getQualificationAccess().getQualifiedClassesAssignment_0(), "rule__Qualification__QualifiedClassesAssignment_0");
					put(grammarAccess.getQualificationAccess().getContributionsAssignment_2(), "rule__Qualification__ContributionsAssignment_2");
					put(grammarAccess.getQualificationAccess().getContributionsAssignment_3_1(), "rule__Qualification__ContributionsAssignment_3_1");
					put(grammarAccess.getCurrentScopeDeclAccess().getProvisionDefsAssignment_2(), "rule__CurrentScopeDecl__ProvisionDefsAssignment_2");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getSelectionDefAssignment_0(), "rule__CurrentScopeProvisionDef__SelectionDefAssignment_0");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getSameScopeAssignment_2_1(), "rule__CurrentScopeProvisionDef__SameScopeAssignment_2_1");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getEmptyScopeAssignment_2_2(), "rule__CurrentScopeProvisionDef__EmptyScopeAssignment_2_2");
					put(grammarAccess.getCurrentScopeProvisionDefAccess().getProvisionsAssignment_3(), "rule__CurrentScopeProvisionDef__ProvisionsAssignment_3");
					put(grammarAccess.getSelectionDefAccess().getExceptionsAssignment_1_0_2_1(), "rule__SelectionDef__ExceptionsAssignment_1_0_2_1");
					put(grammarAccess.getSelectionDefAccess().getExceptionsAssignment_1_0_2_2_1(), "rule__SelectionDef__ExceptionsAssignment_1_0_2_2_1");
					put(grammarAccess.getSelectionDefAccess().getSelectionsAssignment_1_1_1_0(), "rule__SelectionDef__SelectionsAssignment_1_1_1_0");
					put(grammarAccess.getSelectionDefAccess().getSelectionsAssignment_1_1_1_1_1(), "rule__SelectionDef__SelectionsAssignment_1_1_1_1_1");
					put(grammarAccess.getProvisionAccess().getProvidedClassesAssignment_0_0(), "rule__Provision__ProvidedClassesAssignment_0_0");
					put(grammarAccess.getProvisionAccess().getContributionsDefAssignment_1(), "rule__Provision__ContributionsDefAssignment_1");
					put(grammarAccess.getProvisionAccess().getOccludingDefsAssignment_2(), "rule__Provision__OccludingDefsAssignment_2");
					put(grammarAccess.getMultiplePathNamesAccess().getPathNamesAssignment_0(), "rule__MultiplePathNames__PathNamesAssignment_0");
					put(grammarAccess.getMultiplePathNamesAccess().getPathNamesAssignment_1_1(), "rule__MultiplePathNames__PathNamesAssignment_1_1");
					put(grammarAccess.getOccludingDefAccess().getContributionsDefAssignment_1(), "rule__OccludingDef__ContributionsDefAssignment_1");
					put(grammarAccess.getContributionsDefAccess().getContributionsAssignment_0(), "rule__ContributionsDef__ContributionsAssignment_0");
					put(grammarAccess.getContributionsDefAccess().getContributionsAssignment_1_1(), "rule__ContributionsDef__ContributionsAssignment_1_1");
					put(grammarAccess.getContributionAccess().getChildAssignment_0_0_1(), "rule__Contribution__ChildAssignment_0_0_1");
					put(grammarAccess.getContributionAccess().getIsPrecedingAssignment_0_1(), "rule__Contribution__IsPrecedingAssignment_0_1");
					put(grammarAccess.getContributionAccess().getIsExportedAssignment_0_2_0(), "rule__Contribution__IsExportedAssignment_0_2_0");
					put(grammarAccess.getContributionAccess().getTypeRefsAssignment_0_2_1_0(), "rule__Contribution__TypeRefsAssignment_0_2_1_0");
					put(grammarAccess.getContributionAccess().getTypeRefsAssignment_0_2_1_1_1(), "rule__Contribution__TypeRefsAssignment_0_2_1_1_1");
					put(grammarAccess.getContributionAccess().getIsLoadedAssignment_0_3_0(), "rule__Contribution__IsLoadedAssignment_0_3_0");
					put(grammarAccess.getContributionAccess().getTypeRefsAssignment_0_3_1(), "rule__Contribution__TypeRefsAssignment_0_3_1");
					put(grammarAccess.getContributionAccess().getExpressionAssignment_1(), "rule__Contribution__ExpressionAssignment_1");
					put(grammarAccess.getExportedScopeDeclAccess().getProvisionDefsAssignment_2(), "rule__ExportedScopeDecl__ProvisionDefsAssignment_2");
					put(grammarAccess.getExportedScopeProvisionDefAccess().getProvisionsAssignment_1(), "rule__ExportedScopeProvisionDef__ProvisionsAssignment_1");
					put(grammarAccess.getHelpersSectAccess().getClassHelpersAssignment_3(), "rule__HelpersSect__ClassHelpersAssignment_3");
					put(grammarAccess.getHelperClassAccess().getContextAssignment_0(), "rule__HelperClass__ContextAssignment_0");
					put(grammarAccess.getHelperClassAccess().getHelpersAssignment_2(), "rule__HelperClass__HelpersAssignment_2");
					put(grammarAccess.getHelperOpAccess().getOwnedSignatureAssignment_0(), "rule__HelperOp__OwnedSignatureAssignment_0");
					put(grammarAccess.getHelperOpAccess().getNameAssignment_1(), "rule__HelperOp__NameAssignment_1");
					put(grammarAccess.getHelperOpAccess().getParamsAssignment_3_0(), "rule__HelperOp__ParamsAssignment_3_0");
					put(grammarAccess.getHelperOpAccess().getParamsAssignment_3_1_1(), "rule__HelperOp__ParamsAssignment_3_1_1");
					put(grammarAccess.getHelperOpAccess().getOwnedTypeAssignment_5_1(), "rule__HelperOp__OwnedTypeAssignment_5_1");
					put(grammarAccess.getHelperOpAccess().getHelperBodyAssignment_7(), "rule__HelperOp__HelperBodyAssignment_7");
					put(grammarAccess.getParameterDefAccess().getNameAssignment_0(), "rule__ParameterDef__NameAssignment_0");
					put(grammarAccess.getParameterDefAccess().getOwnedTypeAssignment_2(), "rule__ParameterDef__OwnedTypeAssignment_2");
					put(grammarAccess.getLookupExpCSAccess().getIsExportedAssignment_0_1(), "rule__LookupExpCS__IsExportedAssignment_0_1");
					put(grammarAccess.getLookupExpCSAccess().getArgsAssignment_2(), "rule__LookupExpCS__ArgsAssignment_2");
					put(grammarAccess.getLookupExpCSAccess().getArgsAssignment_3_1(), "rule__LookupExpCS__ArgsAssignment_3_1");
					put(grammarAccess.getModelAccess().getOwnedExpressionAssignment(), "rule__Model__OwnedExpressionAssignment");
					put(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsAssignment_0(), "rule__URIPathNameCS__OwnedPathElementsAssignment_0");
					put(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsAssignment_1_1(), "rule__URIPathNameCS__OwnedPathElementsAssignment_1_1");
					put(grammarAccess.getURIFirstPathElementCSAccess().getNameAssignment_0(), "rule__URIFirstPathElementCS__NameAssignment_0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getUriAssignment_1_1(), "rule__URIFirstPathElementCS__UriAssignment_1_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getMapTypeCSAccess().getNameAssignment_0(), "rule__MapTypeCS__NameAssignment_0");
					put(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeAssignment_1_1(), "rule__MapTypeCS__OwnedKeyTypeAssignment_1_1");
					put(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeAssignment_1_3(), "rule__MapTypeCS__OwnedValueTypeAssignment_1_3");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_0_0(), "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionAssignment_0_1_1(), "rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_1(), "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionPatternCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionPatternCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameAssignment_2_2_1(), "rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1");
					put(grammarAccess.getShadowPartCSAccess().getPropNameAssignment_0(), "rule__ShadowPartCS__PropNameAssignment_0");
					put(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_2(), "rule__ShadowPartCS__OwnedInitExpressionAssignment_2");
					put(grammarAccess.getPatternExpCSAccess().getPatternVariableNameAssignment_0(), "rule__PatternExpCS__PatternVariableNameAssignment_0");
					put(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeAssignment_2(), "rule__PatternExpCS__OwnedPatternTypeAssignment_2");
					put(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSAssignment_2(), "rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__MapLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__MapLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyAssignment_0(), "rule__MapLiteralPartCS__OwnedKeyAssignment_0");
					put(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueAssignment_2(), "rule__MapLiteralPartCS__OwnedValueAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getSymbolAssignment(), "rule__NumberLiteralExpCS__SymbolAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment(), "rule__StringLiteralExpCS__SegmentsAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_0(), "rule__BooleanLiteralExpCS__SymbolAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_1(), "rule__BooleanLiteralExpCS__SymbolAssignment_1");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNameAssignment_0(), "rule__TypeNameExpCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_1_0(), "rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardAssignment_1_1_1(), "rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1");
					put(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityAssignment_1(), "rule__TypeExpCS__OwnedMultiplicityAssignment_1");
					put(grammarAccess.getExpCSAccess().getNameAssignment_0_1_1(), "rule__ExpCS__NameAssignment_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedRightAssignment_0_1_2(), "rule__ExpCS__OwnedRightAssignment_0_1_2");
					put(grammarAccess.getPrefixedLetExpCSAccess().getNameAssignment_0_1(), "rule__PrefixedLetExpCS__NameAssignment_0_1");
					put(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightAssignment_0_2(), "rule__PrefixedLetExpCS__OwnedRightAssignment_0_2");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameAssignment_0_1(), "rule__PrefixedPrimaryExpCS__NameAssignment_0_1");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightAssignment_0_2(), "rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2");
					put(grammarAccess.getNameExpCSAccess().getOwnedPathNameAssignment_0(), "rule__NameExpCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesAssignment_1(), "rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1");
					put(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseAssignment_2(), "rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2");
					put(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_3(), "rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3");
					put(grammarAccess.getNameExpCSAccess().getIsPreAssignment_4_0(), "rule__NameExpCS__IsPreAssignment_4_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_0(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_1_1(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_1_1");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getValueAssignment_2_1(), "rule__CurlyBracketedClauseCS__ValueAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_1(), "rule__SquareBracketedClauseCS__OwnedTermsAssignment_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_2_1(), "rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionAssignment_0_0(), "rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_0_1_0_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_0_2_1(), "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_1_1(), "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionAssignment_2_2_1(), "rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_0_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_0_2_1(), "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_1_1(), "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionAssignment_2_2_1(), "rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getOwnedConditionAssignment_1(), "rule__IfExpCS__OwnedConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionAssignment_3(), "rule__IfExpCS__OwnedThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsAssignment_4(), "rule__IfExpCS__OwnedIfThenExpressionsAssignment_4");
					put(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionAssignment_6(), "rule__IfExpCS__OwnedElseExpressionAssignment_6");
					put(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionAssignment_1(), "rule__ElseIfThenExpCS__OwnedConditionAssignment_1");
					put(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionAssignment_3(), "rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3");
					put(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_1(), "rule__LetExpCS__OwnedVariablesAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_2_1(), "rule__LetExpCS__OwnedVariablesAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getOwnedInExpressionAssignment_4(), "rule__LetExpCS__OwnedInExpressionAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseAssignment_1(), "rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_2_1(), "rule__LetVariableCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionAssignment_4(), "rule__LetVariableCS__OwnedInitExpressionAssignment_4");
					put(grammarAccess.getNestedExpCSAccess().getOwnedExpressionAssignment_1(), "rule__NestedExpCS__OwnedExpressionAssignment_1");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getMultiplicityCSAccess().getIsNullFreeAssignment_2_1(), "rule__MultiplicityCS__IsNullFreeAssignment_2_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_0(), "rule__PathNameCS__OwnedPathElementsAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_1_1(), "rule__PathNameCS__OwnedPathElementsAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getNameAssignment(), "rule__FirstPathElementCS__NameAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getNameAssignment(), "rule__NextPathElementCS__NameAssignment");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_0(), "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_1_1(), "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityAssignment_2(), "rule__TemplateBindingCS__OwnedMultiplicityAssignment_2");
					put(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterAssignment(), "rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersAssignment_1(), "rule__TemplateSignatureCS__OwnedParametersAssignment_1");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersAssignment_2_1(), "rule__TemplateSignatureCS__OwnedParametersAssignment_2_1");
					put(grammarAccess.getTypeParameterCSAccess().getNameAssignment_0(), "rule__TypeParameterCS__NameAssignment_0");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_1");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_2_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1");
					put(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNameAssignment_0(), "rule__TypedTypeRefCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingAssignment_1_1(), "rule__TypedTypeRefCS__OwnedBindingAssignment_1_1");
					put(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsAssignment_2_1(), "rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1");
					put(grammarAccess.getCS2ASModelAccess().getUnorderedGroup_2(), "rule__CS2ASModel__UnorderedGroup_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			uk.ac.york.cs.cs2as.ui.contentassist.antlr.internal.InternalCS2ASDSLParser typedParser = (uk.ac.york.cs.cs2as.ui.contentassist.antlr.internal.InternalCS2ASDSLParser) parser;
			typedParser.entryRuleCS2ASModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CS2ASDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CS2ASDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
