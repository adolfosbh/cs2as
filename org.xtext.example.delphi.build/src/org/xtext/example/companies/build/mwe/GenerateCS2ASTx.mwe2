/*******************************************************************************
 * Copyright (c) 2016 Willink Transformations, University of York and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Adolfo Sanchez-Barbudo Herrera (University of York) - 
 *
 *******************************************************************************/
module org.xtext.example.companies.GenerateCS2ASTx

import org.eclipse.ocl.examples.build.*
import org.eclipse.ocl.examples.build.utilities.*
import org.eclipse.ocl.examples.build.xtend.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

/**
 *	Generate the Concrete Syntax 2 Abstract Syntax infrastructure
 */
Workflow {
	bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = ".."
    	scanClassPath = true
    }
    bean = EcoreGenModelSetup { resourceSet = resourceSet }
    
    // We inject the CS trace property
	component = org.eclipse.qvtd.cs2as.build.mwe.CSTracePropertyInjector {
		resourceSet = resourceSet
		cSTraceInfo = org.eclipse.qvtd.cs2as.build.mwe.CSTracePropertyInjector.CSTraceInfo {
			targetGenModel = "platform:/resource/org.xtext.example.delphi/model/generated/Delphi.genmodel"	
		}
		aSTraceType = org.eclipse.qvtd.cs2as.build.mwe.CSTracePropertyInjector.ASTraceInfo {
			targetGenModel = "platform:/resource/org.xtext.example.delphi/model/astm.genmodel"
			targetTypeName = "Visitable"
		}
	}
	
	component = GenerateModel { resourceSet = resourceSet skipOnErrors = true
    	genModel = "/org.xtext.example.delphi/model/generated/Delphi.genmodel"
    }
//    //  Generate the CS2AS CGed transformation
//     component = org.eclipse.ocl.examples.build.utilities.CopyAndRename {
//    	script = "org.xtext.example.delphi.build.GenerateCS2AST"
//    	fromProject = "../../org.eclipse.qvtd-master/plugins/org.eclipse.qvtd.runtime/src"
//    	toProject = "../org.xtext.example.delphi/src-gen"
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.runtime.internal.cs2as"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.runtime.evaluation"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.runtime.internal.evaluation"
//    		to = "org.xtext.example.delphi.internal.tx"
//    	}
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.runtime.labels"
//    		to = "org.xtext.example.delphi.labels"
//    	}
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.runtime.library.model"
//    		to = "org.xtext.example.delphi.library.model"
//    	}
//    	
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.internal.cs2as"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    	
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.evaluation"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.internal.evaluation"
//    		to = "org.xtext.example.delphi.internal.tx"
//    	}
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.labels"
//    		to = "org.xtext.example.delphi.labels"
//    	}
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.library.model"
//    		to = "org.xtext.example.delphi.library.model"
//    	}
//    }
//    
//     component = org.eclipse.ocl.examples.build.utilities.CopyAndRename {
//    	script = "org.xtext.example.delphi.build.GenerateCS2ASTx"
//    	fromProject = "../../org.eclipse.qvtd-master/plugins/org.eclipse.qvtd.cs2as.xtext.runtime/src"
//    	toProject = "../org.xtext.example.delphi/src-gen"
//    	packageCopy = {
//    		from = "org.eclipse.qvtd.cs2as.xtext.runtime"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    	packageRename = {
//    		from = "org.eclipse.qvtd.runtime.internal.cs2as"
//    		to = "org.xtext.example.delphi.tx"
//    	}
//    }
    component = @org.eclipse.qvtd.cs2as.build.mwe.GenerateCGedQVTiTransformation {
		resourceSet = resourceSet
		oclFileURI = "platform:/resource/org.xtext.example.delphi/model/delphi.ocl"
		// FIXME the following only works if the output project are in the same FS folder. Better use a projectName and improve generator 
		javaFolder = "../org.xtext.example.delphi/src-gen"
		javaPackage = "org.xtext.example.delphi"
		lookupResolverClassName = "org.xtext.example.company.lookup.util.CompanyLookupSolver"
		lookupResultItfName = "org.xtext.example.company.lookup.util.CompanyLookupResult"
	}
}
