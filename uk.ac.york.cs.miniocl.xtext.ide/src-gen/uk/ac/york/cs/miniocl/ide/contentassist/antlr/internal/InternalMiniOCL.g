/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
grammar InternalMiniOCL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package uk.ac.york.cs.miniocl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.york.cs.miniocl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.york.cs.miniocl.services.MiniOCLGrammarAccess;

}
@parser::members {
	private MiniOCLGrammarAccess grammarAccess;

	public void setGrammarAccess(MiniOCLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRootCS
entryRuleRootCS
:
{ before(grammarAccess.getRootCSRule()); }
	 ruleRootCS
{ after(grammarAccess.getRootCSRule()); } 
	 EOF 
;

// Rule RootCS
ruleRootCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootCSAccess().getAlternatives()); }
		(rule__RootCS__Alternatives)*
		{ after(grammarAccess.getRootCSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageCS
entryRulePackageCS
:
{ before(grammarAccess.getPackageCSRule()); }
	 rulePackageCS
{ after(grammarAccess.getPackageCSRule()); } 
	 EOF 
;

// Rule PackageCS
rulePackageCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageCSAccess().getGroup()); }
		(rule__PackageCS__Group__0)
		{ after(grammarAccess.getPackageCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassCS
entryRuleClassCS
:
{ before(grammarAccess.getClassCSRule()); }
	 ruleClassCS
{ after(grammarAccess.getClassCSRule()); } 
	 EOF 
;

// Rule ClassCS
ruleClassCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassCSAccess().getGroup()); }
		(rule__ClassCS__Group__0)
		{ after(grammarAccess.getClassCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCS
entryRulePropertyCS
:
{ before(grammarAccess.getPropertyCSRule()); }
	 rulePropertyCS
{ after(grammarAccess.getPropertyCSRule()); } 
	 EOF 
;

// Rule PropertyCS
rulePropertyCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCSAccess().getGroup()); }
		(rule__PropertyCS__Group__0)
		{ after(grammarAccess.getPropertyCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationCS
entryRuleOperationCS
:
{ before(grammarAccess.getOperationCSRule()); }
	 ruleOperationCS
{ after(grammarAccess.getOperationCSRule()); } 
	 EOF 
;

// Rule OperationCS
ruleOperationCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationCSAccess().getGroup()); }
		(rule__OperationCS__Group__0)
		{ after(grammarAccess.getOperationCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterCS
entryRuleParameterCS
:
{ before(grammarAccess.getParameterCSRule()); }
	 ruleParameterCS
{ after(grammarAccess.getParameterCSRule()); } 
	 EOF 
;

// Rule ParameterCS
ruleParameterCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterCSAccess().getGroup()); }
		(rule__ParameterCS__Group__0)
		{ after(grammarAccess.getParameterCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintCS
entryRuleConstraintCS
:
{ before(grammarAccess.getConstraintCSRule()); }
	 ruleConstraintCS
{ after(grammarAccess.getConstraintCSRule()); } 
	 EOF 
;

// Rule ConstraintCS
ruleConstraintCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintCSAccess().getGroup()); }
		(rule__ConstraintCS__Group__0)
		{ after(grammarAccess.getConstraintCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariantCS
entryRuleInvariantCS
:
{ before(grammarAccess.getInvariantCSRule()); }
	 ruleInvariantCS
{ after(grammarAccess.getInvariantCSRule()); } 
	 EOF 
;

// Rule InvariantCS
ruleInvariantCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantCSAccess().getGroup()); }
		(rule__InvariantCS__Group__0)
		{ after(grammarAccess.getInvariantCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpCS
entryRuleExpCS
:
{ before(grammarAccess.getExpCSRule()); }
	 ruleExpCS
{ after(grammarAccess.getExpCSRule()); } 
	 EOF 
;

// Rule ExpCS
ruleExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpCSAccess().getLogicExpCSParserRuleCall()); }
		ruleLogicExpCS
		{ after(grammarAccess.getExpCSAccess().getLogicExpCSParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicExpCS
entryRuleLogicExpCS
:
{ before(grammarAccess.getLogicExpCSRule()); }
	 ruleLogicExpCS
{ after(grammarAccess.getLogicExpCSRule()); } 
	 EOF 
;

// Rule LogicExpCS
ruleLogicExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicExpCSAccess().getGroup()); }
		(rule__LogicExpCS__Group__0)
		{ after(grammarAccess.getLogicExpCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallExpCS
entryRuleCallExpCS
:
{ before(grammarAccess.getCallExpCSRule()); }
	 ruleCallExpCS
{ after(grammarAccess.getCallExpCSRule()); } 
	 EOF 
;

// Rule CallExpCS
ruleCallExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallExpCSAccess().getGroup()); }
		(rule__CallExpCS__Group__0)
		{ after(grammarAccess.getCallExpCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpCS
entryRulePrimaryExpCS
:
{ before(grammarAccess.getPrimaryExpCSRule()); }
	 rulePrimaryExpCS
{ after(grammarAccess.getPrimaryExpCSRule()); } 
	 EOF 
;

// Rule PrimaryExpCS
rulePrimaryExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpCSAccess().getAlternatives()); }
		(rule__PrimaryExpCS__Alternatives)
		{ after(grammarAccess.getPrimaryExpCSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameExpCS
entryRuleNameExpCS
:
{ before(grammarAccess.getNameExpCSRule()); }
	 ruleNameExpCS
{ after(grammarAccess.getNameExpCSRule()); } 
	 EOF 
;

// Rule NameExpCS
ruleNameExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameExpCSAccess().getGroup()); }
		(rule__NameExpCS__Group__0)
		{ after(grammarAccess.getNameExpCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoundedBracketClauseCS
entryRuleRoundedBracketClauseCS
:
{ before(grammarAccess.getRoundedBracketClauseCSRule()); }
	 ruleRoundedBracketClauseCS
{ after(grammarAccess.getRoundedBracketClauseCSRule()); } 
	 EOF 
;

// Rule RoundedBracketClauseCS
ruleRoundedBracketClauseCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoundedBracketClauseCSAccess().getGroup()); }
		(rule__RoundedBracketClauseCS__Group__0)
		{ after(grammarAccess.getRoundedBracketClauseCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpCS
entryRuleLiteralExpCS
:
{ before(grammarAccess.getLiteralExpCSRule()); }
	 ruleLiteralExpCS
{ after(grammarAccess.getLiteralExpCSRule()); } 
	 EOF 
;

// Rule LiteralExpCS
ruleLiteralExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpCSAccess().getAlternatives()); }
		(rule__LiteralExpCS__Alternatives)
		{ after(grammarAccess.getLiteralExpCSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteralExpCS
entryRuleIntLiteralExpCS
:
{ before(grammarAccess.getIntLiteralExpCSRule()); }
	 ruleIntLiteralExpCS
{ after(grammarAccess.getIntLiteralExpCSRule()); } 
	 EOF 
;

// Rule IntLiteralExpCS
ruleIntLiteralExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralExpCSAccess().getIntSymbolAssignment()); }
		(rule__IntLiteralExpCS__IntSymbolAssignment)
		{ after(grammarAccess.getIntLiteralExpCSAccess().getIntSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteralExpCS
entryRuleStringLiteralExpCS
:
{ before(grammarAccess.getStringLiteralExpCSRule()); }
	 ruleStringLiteralExpCS
{ after(grammarAccess.getStringLiteralExpCSRule()); } 
	 EOF 
;

// Rule StringLiteralExpCS
ruleStringLiteralExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
		(rule__StringLiteralExpCS__StringSymbolAssignment)
		{ after(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteralExpCS
entryRuleBooleanLiteralExpCS
:
{ before(grammarAccess.getBooleanLiteralExpCSRule()); }
	 ruleBooleanLiteralExpCS
{ after(grammarAccess.getBooleanLiteralExpCSRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpCS
ruleBooleanLiteralExpCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralExpCSAccess().getGroup()); }
		(rule__BooleanLiteralExpCS__Group__0)
		{ after(grammarAccess.getBooleanLiteralExpCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathNameCS
entryRulePathNameCS
:
{ before(grammarAccess.getPathNameCSRule()); }
	 rulePathNameCS
{ after(grammarAccess.getPathNameCSRule()); } 
	 EOF 
;

// Rule PathNameCS
rulePathNameCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathNameCSAccess().getGroup()); }
		(rule__PathNameCS__Group__0)
		{ after(grammarAccess.getPathNameCSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathElementCS
entryRulePathElementCS
:
{ before(grammarAccess.getPathElementCSRule()); }
	 rulePathElementCS
{ after(grammarAccess.getPathElementCSRule()); } 
	 EOF 
;

// Rule PathElementCS
rulePathElementCS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathElementCSAccess().getPathNameAssignment()); }
		(rule__PathElementCS__PathNameAssignment)
		{ after(grammarAccess.getPathElementCSAccess().getPathNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootCS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootCSAccess().getPackagesAssignment_0()); }
		(rule__RootCS__PackagesAssignment_0)
		{ after(grammarAccess.getRootCSAccess().getPackagesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getRootCSAccess().getContraintsAssignment_1()); }
		(rule__RootCS__ContraintsAssignment_1)
		{ after(grammarAccess.getRootCSAccess().getContraintsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageCSAccess().getPackagesAssignment_3_0()); }
		(rule__PackageCS__PackagesAssignment_3_0)
		{ after(grammarAccess.getPackageCSAccess().getPackagesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageCSAccess().getClassesAssignment_3_1()); }
		(rule__PackageCS__ClassesAssignment_3_1)
		{ after(grammarAccess.getPackageCSAccess().getClassesAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassCSAccess().getPropertiesAssignment_4_0()); }
		(rule__ClassCS__PropertiesAssignment_4_0)
		{ after(grammarAccess.getClassCSAccess().getPropertiesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassCSAccess().getOperationsAssignment_4_1()); }
		(rule__ClassCS__OperationsAssignment_4_1)
		{ after(grammarAccess.getClassCSAccess().getOperationsAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpCSAccess().getOpEqualsSignKeyword_1_1_0_0()); }
		'='
		{ after(grammarAccess.getLogicExpCSAccess().getOpEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpCSAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
		'<>'
		{ after(grammarAccess.getLogicExpCSAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpCSAccess().getOpFullStopKeyword_1_1_0_0()); }
		'.'
		{ after(grammarAccess.getCallExpCSAccess().getOpFullStopKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallExpCSAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }
		'->'
		{ after(grammarAccess.getCallExpCSAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpCS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_0()); }
		ruleNameExpCS
		{ after(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpCSAccess().getLiteralExpCSParserRuleCall_1()); }
		ruleLiteralExpCS
		{ after(grammarAccess.getPrimaryExpCSAccess().getLiteralExpCSParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpCS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpCSAccess().getIntLiteralExpCSParserRuleCall_0()); }
		ruleIntLiteralExpCS
		{ after(grammarAccess.getLiteralExpCSAccess().getIntLiteralExpCSParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1()); }
		ruleStringLiteralExpCS
		{ after(grammarAccess.getLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2()); }
		ruleBooleanLiteralExpCS
		{ after(grammarAccess.getLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolAssignment_1_0()); }
		(rule__BooleanLiteralExpCS__BoolSymbolAssignment_1_0)
		{ after(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralExpCSAccess().getFalseKeyword_1_1()); }
		'false'
		{ after(grammarAccess.getBooleanLiteralExpCSAccess().getFalseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageCS__Group__0__Impl
	rule__PackageCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageCSAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageCSAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageCS__Group__1__Impl
	rule__PackageCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageCSAccess().getNameAssignment_1()); }
	(rule__PackageCS__NameAssignment_1)
	{ after(grammarAccess.getPackageCSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageCS__Group__2__Impl
	rule__PackageCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageCSAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageCSAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageCS__Group__3__Impl
	rule__PackageCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageCSAccess().getAlternatives_3()); }
	(rule__PackageCS__Alternatives_3)*
	{ after(grammarAccess.getPackageCSAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageCS__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageCSAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPackageCSAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__0__Impl
	rule__ClassCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassCSAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__1__Impl
	rule__ClassCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getNameAssignment_1()); }
	(rule__ClassCS__NameAssignment_1)
	{ after(grammarAccess.getClassCSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__2__Impl
	rule__ClassCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getGroup_2()); }
	(rule__ClassCS__Group_2__0)?
	{ after(grammarAccess.getClassCSAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__3__Impl
	rule__ClassCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getClassCSAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__4__Impl
	rule__ClassCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getAlternatives_4()); }
	(rule__ClassCS__Alternatives_4)*
	{ after(grammarAccess.getClassCSAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getClassCSAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassCS__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group_2__0__Impl
	rule__ClassCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getClassCSAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassCS__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassCSAccess().getExtendsAssignment_2_1()); }
	(rule__ClassCS__ExtendsAssignment_2_1)
	{ after(grammarAccess.getClassCSAccess().getExtendsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCS__Group__0__Impl
	rule__PropertyCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCSAccess().getPropKeyword_0()); }
	'prop'
	{ after(grammarAccess.getPropertyCSAccess().getPropKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCS__Group__1__Impl
	rule__PropertyCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCSAccess().getNameAssignment_1()); }
	(rule__PropertyCS__NameAssignment_1)
	{ after(grammarAccess.getPropertyCSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCS__Group__2__Impl
	rule__PropertyCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCSAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPropertyCSAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCS__Group__3__Impl
	rule__PropertyCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCSAccess().getTypeRefAssignment_3()); }
	(rule__PropertyCS__TypeRefAssignment_3)
	{ after(grammarAccess.getPropertyCSAccess().getTypeRefAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCS__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCSAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getPropertyCSAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__0__Impl
	rule__OperationCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getOpKeyword_0()); }
	'op'
	{ after(grammarAccess.getOperationCSAccess().getOpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__1__Impl
	rule__OperationCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getNameAssignment_1()); }
	(rule__OperationCS__NameAssignment_1)
	{ after(grammarAccess.getOperationCSAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__2__Impl
	rule__OperationCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__3__Impl
	rule__OperationCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getGroup_3()); }
	(rule__OperationCS__Group_3__0)?
	{ after(grammarAccess.getOperationCSAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__4__Impl
	rule__OperationCS__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__5__Impl
	rule__OperationCS__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getOperationCSAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__6__Impl
	rule__OperationCS__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getResultRefAssignment_6()); }
	(rule__OperationCS__ResultRefAssignment_6)
	{ after(grammarAccess.getOperationCSAccess().getResultRefAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__7__Impl
	rule__OperationCS__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getOperationCSAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__8__Impl
	rule__OperationCS__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getBodyAssignment_8()); }
	(rule__OperationCS__BodyAssignment_8)
	{ after(grammarAccess.getOperationCSAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getOperationCSAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCS__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group_3__0__Impl
	rule__OperationCS__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getParamsAssignment_3_0()); }
	(rule__OperationCS__ParamsAssignment_3_0)
	{ after(grammarAccess.getOperationCSAccess().getParamsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getGroup_3_1()); }
	(rule__OperationCS__Group_3_1__0)*
	{ after(grammarAccess.getOperationCSAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCS__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group_3_1__0__Impl
	rule__OperationCS__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getOperationCSAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCS__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCSAccess().getParamsAssignment_3_1_1()); }
	(rule__OperationCS__ParamsAssignment_3_1_1)
	{ after(grammarAccess.getOperationCSAccess().getParamsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterCS__Group__0__Impl
	rule__ParameterCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterCSAccess().getNameAssignment_0()); }
	(rule__ParameterCS__NameAssignment_0)
	{ after(grammarAccess.getParameterCSAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterCS__Group__1__Impl
	rule__ParameterCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterCSAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterCSAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterCS__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterCSAccess().getTypeRefAssignment_2()); }
	(rule__ParameterCS__TypeRefAssignment_2)
	{ after(grammarAccess.getParameterCSAccess().getTypeRefAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintCS__Group__0__Impl
	rule__ConstraintCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintCSAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getConstraintCSAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintCS__Group__1__Impl
	rule__ConstraintCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintCSAccess().getTypeRefAssignment_1()); }
	(rule__ConstraintCS__TypeRefAssignment_1)
	{ after(grammarAccess.getConstraintCSAccess().getTypeRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintCS__Group__2__Impl
	rule__ConstraintCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintCSAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConstraintCSAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintCS__Group__3__Impl
	rule__ConstraintCS__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintCSAccess().getInvariantsAssignment_3()); }
	(rule__ConstraintCS__InvariantsAssignment_3)*
	{ after(grammarAccess.getConstraintCSAccess().getInvariantsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintCS__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintCSAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConstraintCSAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantCS__Group__0__Impl
	rule__InvariantCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantCSAccess().getInvKeyword_0()); }
	'inv'
	{ after(grammarAccess.getInvariantCSAccess().getInvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantCS__Group__1__Impl
	rule__InvariantCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantCSAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInvariantCSAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantCS__Group__2__Impl
	rule__InvariantCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantCSAccess().getExpAssignment_2()); }
	(rule__InvariantCS__ExpAssignment_2)
	{ after(grammarAccess.getInvariantCSAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantCS__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantCSAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getInvariantCSAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExpCS__Group__0__Impl
	rule__LogicExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpCSAccess().getCallExpCSParserRuleCall_0()); }
	ruleCallExpCS
	{ after(grammarAccess.getLogicExpCSAccess().getCallExpCSParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExpCS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpCSAccess().getGroup_1()); }
	(rule__LogicExpCS__Group_1__0)*
	{ after(grammarAccess.getLogicExpCSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicExpCS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExpCS__Group_1__0__Impl
	rule__LogicExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpCSAccess().getLogicExpCSLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicExpCSAccess().getLogicExpCSLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExpCS__Group_1__1__Impl
	rule__LogicExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpCSAccess().getOpAssignment_1_1()); }
	(rule__LogicExpCS__OpAssignment_1_1)
	{ after(grammarAccess.getLogicExpCSAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicExpCS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicExpCSAccess().getRightAssignment_1_2()); }
	(rule__LogicExpCS__RightAssignment_1_2)
	{ after(grammarAccess.getLogicExpCSAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpCS__Group__0__Impl
	rule__CallExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpCSAccess().getPrimaryExpCSParserRuleCall_0()); }
	rulePrimaryExpCS
	{ after(grammarAccess.getCallExpCSAccess().getPrimaryExpCSParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpCS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpCSAccess().getGroup_1()); }
	(rule__CallExpCS__Group_1__0)*
	{ after(grammarAccess.getCallExpCSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpCS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpCS__Group_1__0__Impl
	rule__CallExpCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpCSAccess().getCallExpCSSourceAction_1_0()); }
	()
	{ after(grammarAccess.getCallExpCSAccess().getCallExpCSSourceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpCS__Group_1__1__Impl
	rule__CallExpCS__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpCSAccess().getOpAssignment_1_1()); }
	(rule__CallExpCS__OpAssignment_1_1)
	{ after(grammarAccess.getCallExpCSAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallExpCS__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallExpCSAccess().getNameExpAssignment_1_2()); }
	(rule__CallExpCS__NameExpAssignment_1_2)
	{ after(grammarAccess.getCallExpCSAccess().getNameExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameExpCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpCS__Group__0__Impl
	rule__NameExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpCSAccess().getExpNameAssignment_0()); }
	(rule__NameExpCS__ExpNameAssignment_0)
	{ after(grammarAccess.getNameExpCSAccess().getExpNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpCS__Group__1__Impl
	rule__NameExpCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpCSAccess().getRoundedBracketsAssignment_1()); }
	(rule__NameExpCS__RoundedBracketsAssignment_1)?
	{ after(grammarAccess.getNameExpCSAccess().getRoundedBracketsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameExpCS__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameExpCSAccess().getCallExpAssignment_2()); }
	(rule__NameExpCS__CallExpAssignment_2)?
	{ after(grammarAccess.getNameExpCSAccess().getCallExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoundedBracketClauseCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group__0__Impl
	rule__RoundedBracketClauseCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getRoundedBracketClauseCSAction_0()); }
	()
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getRoundedBracketClauseCSAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group__1__Impl
	rule__RoundedBracketClauseCS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group__2__Impl
	rule__RoundedBracketClauseCS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getGroup_2()); }
	(rule__RoundedBracketClauseCS__Group_2__0)?
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoundedBracketClauseCS__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group_2__0__Impl
	rule__RoundedBracketClauseCS__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getArgsAssignment_2_0()); }
	(rule__RoundedBracketClauseCS__ArgsAssignment_2_0)
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getGroup_2_1()); }
	(rule__RoundedBracketClauseCS__Group_2_1__0)*
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoundedBracketClauseCS__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group_2_1__0__Impl
	rule__RoundedBracketClauseCS__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedBracketClauseCS__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedBracketClauseCSAccess().getArgsAssignment_2_1_1()); }
	(rule__RoundedBracketClauseCS__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getRoundedBracketClauseCSAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteralExpCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteralExpCS__Group__0__Impl
	rule__BooleanLiteralExpCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralExpCSAccess().getBooleanExpCSAction_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralExpCSAccess().getBooleanExpCSAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteralExpCS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives_1()); }
	(rule__BooleanLiteralExpCS__Alternatives_1)
	{ after(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathNameCS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathNameCS__Group__0__Impl
	rule__PathNameCS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameCSAccess().getPathAssignment_0()); }
	(rule__PathNameCS__PathAssignment_0)
	{ after(grammarAccess.getPathNameCSAccess().getPathAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathNameCS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameCSAccess().getGroup_1()); }
	(rule__PathNameCS__Group_1__0)*
	{ after(grammarAccess.getPathNameCSAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathNameCS__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathNameCS__Group_1__0__Impl
	rule__PathNameCS__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathNameCS__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1()); }
	(rule__PathNameCS__PathAssignment_1_1)
	{ after(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootCS__PackagesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootCSAccess().getPackagesPackageCSParserRuleCall_0_0()); }
		rulePackageCS
		{ after(grammarAccess.getRootCSAccess().getPackagesPackageCSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootCS__ContraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootCSAccess().getContraintsConstraintCSParserRuleCall_1_0()); }
		ruleConstraintCS
		{ after(grammarAccess.getRootCSAccess().getContraintsConstraintCSParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageCSAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPackageCSAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__PackagesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageCSAccess().getPackagesPackageCSParserRuleCall_3_0_0()); }
		rulePackageCS
		{ after(grammarAccess.getPackageCSAccess().getPackagesPackageCSParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageCS__ClassesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageCSAccess().getClassesClassCSParserRuleCall_3_1_0()); }
		ruleClassCS
		{ after(grammarAccess.getPackageCSAccess().getClassesClassCSParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassCSAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassCSAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__ExtendsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassCSAccess().getExtendsPathNameCSParserRuleCall_2_1_0()); }
		rulePathNameCS
		{ after(grammarAccess.getClassCSAccess().getExtendsPathNameCSParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__PropertiesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassCSAccess().getPropertiesPropertyCSParserRuleCall_4_0_0()); }
		rulePropertyCS
		{ after(grammarAccess.getClassCSAccess().getPropertiesPropertyCSParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassCS__OperationsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassCSAccess().getOperationsOperationCSParserRuleCall_4_1_0()); }
		ruleOperationCS
		{ after(grammarAccess.getClassCSAccess().getOperationsOperationCSParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCSAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyCSAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCS__TypeRefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCSAccess().getTypeRefPathNameCSParserRuleCall_3_0()); }
		rulePathNameCS
		{ after(grammarAccess.getPropertyCSAccess().getTypeRefPathNameCSParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCSAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationCSAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__ParamsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCSAccess().getParamsParameterCSParserRuleCall_3_0_0()); }
		ruleParameterCS
		{ after(grammarAccess.getOperationCSAccess().getParamsParameterCSParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__ParamsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCSAccess().getParamsParameterCSParserRuleCall_3_1_1_0()); }
		ruleParameterCS
		{ after(grammarAccess.getOperationCSAccess().getParamsParameterCSParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__ResultRefAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCSAccess().getResultRefPathNameCSParserRuleCall_6_0()); }
		rulePathNameCS
		{ after(grammarAccess.getOperationCSAccess().getResultRefPathNameCSParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCS__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCSAccess().getBodyExpCSParserRuleCall_8_0()); }
		ruleExpCS
		{ after(grammarAccess.getOperationCSAccess().getBodyExpCSParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterCSAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterCSAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterCS__TypeRefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterCSAccess().getTypeRefPathNameCSParserRuleCall_2_0()); }
		rulePathNameCS
		{ after(grammarAccess.getParameterCSAccess().getTypeRefPathNameCSParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__TypeRefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintCSAccess().getTypeRefPathNameCSParserRuleCall_1_0()); }
		rulePathNameCS
		{ after(grammarAccess.getConstraintCSAccess().getTypeRefPathNameCSParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCS__InvariantsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintCSAccess().getInvariantsInvariantCSParserRuleCall_3_0()); }
		ruleInvariantCS
		{ after(grammarAccess.getConstraintCSAccess().getInvariantsInvariantCSParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantCS__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantCSAccess().getExpExpCSParserRuleCall_2_0()); }
		ruleExpCS
		{ after(grammarAccess.getInvariantCSAccess().getExpExpCSParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpCSAccess().getOpAlternatives_1_1_0()); }
		(rule__LogicExpCS__OpAlternatives_1_1_0)
		{ after(grammarAccess.getLogicExpCSAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExpCS__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpCSAccess().getRightCallExpCSParserRuleCall_1_2_0()); }
		ruleCallExpCS
		{ after(grammarAccess.getLogicExpCSAccess().getRightCallExpCSParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpCSAccess().getOpAlternatives_1_1_0()); }
		(rule__CallExpCS__OpAlternatives_1_1_0)
		{ after(grammarAccess.getCallExpCSAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpCS__NameExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallExpCSAccess().getNameExpNameExpCSParserRuleCall_1_2_0()); }
		ruleNameExpCS
		{ after(grammarAccess.getCallExpCSAccess().getNameExpNameExpCSParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__ExpNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameExpCSAccess().getExpNamePathNameCSParserRuleCall_0_0()); }
		rulePathNameCS
		{ after(grammarAccess.getNameExpCSAccess().getExpNamePathNameCSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__RoundedBracketsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameExpCSAccess().getRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0()); }
		ruleRoundedBracketClauseCS
		{ after(grammarAccess.getNameExpCSAccess().getRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpCS__CallExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameExpCSAccess().getCallExpCallExpCSParserRuleCall_2_0()); }
		ruleCallExpCS
		{ after(grammarAccess.getNameExpCSAccess().getCallExpCallExpCSParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedBracketClauseCSAccess().getArgsExpCSParserRuleCall_2_0_0()); }
		ruleExpCS
		{ after(grammarAccess.getRoundedBracketClauseCSAccess().getArgsExpCSParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedBracketClauseCS__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedBracketClauseCSAccess().getArgsExpCSParserRuleCall_2_1_1_0()); }
		ruleExpCS
		{ after(grammarAccess.getRoundedBracketClauseCSAccess().getArgsExpCSParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteralExpCS__IntSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralExpCSAccess().getIntSymbolINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralExpCSAccess().getIntSymbolINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpCS__StringSymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralExpCSAccess().getStringSymbolSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpCS__BoolSymbolAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolTrueKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolTrueKeyword_1_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolTrueKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralExpCSAccess().getBoolSymbolTrueKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__PathAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathNameCSAccess().getPathPathElementCSParserRuleCall_0_0()); }
		rulePathElementCS
		{ after(grammarAccess.getPathNameCSAccess().getPathPathElementCSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathNameCS__PathAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathNameCSAccess().getPathPathElementCSParserRuleCall_1_1_0()); }
		rulePathElementCS
		{ after(grammarAccess.getPathNameCSAccess().getPathPathElementCSParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathElementCS__PathNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathElementCSAccess().getPathNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPathElementCSAccess().getPathNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
