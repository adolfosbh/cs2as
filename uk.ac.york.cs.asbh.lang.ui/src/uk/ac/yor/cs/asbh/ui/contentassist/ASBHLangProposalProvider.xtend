/*
 * generated by Xtext
 */
package uk.ac.yor.cs.asbh.ui.contentassist

import uk.ac.yor.cs.asbh.ui.contentassist.AbstractASBHLangProposalProvider
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import uk.ac.york.cs.asbh.lang.cs2as.source.SElement
import uk.ac.york.cs.asbh.lang.cs2as.target.util.Visitable
import uk.ac.york.cs.asbh.lang.cs2as.target.NamedElement
import uk.ac.york.cs.asbh.lang.cs2as.target.lookup.util.TargetDefaultLookupVisitor
import uk.ac.york.cs.asbh.lang.cs2as.target.lookup.LookupEnvironment

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
class ASBHLangProposalProvider extends AbstractASBHLangProposalProvider {
	
	override completePathElementCS_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		var asElement = getVisitableElement(model);
		if (asElement != null ) {
			var ContentAssitLookupEnvironment lookupEnv = new ContentAssitLookupEnvironment(asElement as EObject);
			var TargetDefaultLookupVisitor visitor = new TargetDefaultLookupVisitor(lookupEnv);
			createProposals(asElement.accept(visitor), context, acceptor);
		}
		super.completePathElementCS_Name(model, assignment, context, acceptor)
	}
	
	def Visitable getVisitableElement(EObject model) {
		
		var sElement = model;
		while (sElement != null) {
			if (sElement instanceof SElement) {
				var EObject asElement = sElement.ast;
				if (asElement instanceof Visitable) {
					return asElement;		
				}
			}
			sElement = sElement.eContainer;
		}
		return null;
	}
	
	def void createProposals(LookupEnvironment lookupEnv, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		
		for (NamedElement namedElement : lookupEnv.namedElements) {
			acceptor.accept(createCompletionProposal(namedElement.name, context))
		}
	}
}
