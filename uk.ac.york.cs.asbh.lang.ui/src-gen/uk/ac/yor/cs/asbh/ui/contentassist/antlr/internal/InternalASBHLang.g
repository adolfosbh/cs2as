/*
 * generated by Xtext
 */
grammar InternalASBHLang;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.yor.cs.asbh.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.yor.cs.asbh.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.yor.cs.asbh.services.ASBHLangGrammarAccess;

}

@parser::members {
 
 	private ASBHLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ASBHLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRoot
entryRuleRoot 
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootAccess().getGroup()); }
(rule__Root__Group__0)
{ after(grammarAccess.getRootAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleY
entryRuleY 
:
{ before(grammarAccess.getYRule()); }
	 ruleY
{ after(grammarAccess.getYRule()); } 
	 EOF 
;

// Rule Y
ruleY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYAccess().getAlternatives()); }
(rule__Y__Alternatives)
{ after(grammarAccess.getYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleX
entryRuleX 
:
{ before(grammarAccess.getXRule()); }
	 ruleX
{ after(grammarAccess.getXRule()); } 
	 EOF 
;

// Rule X
ruleX
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAccess().getGroup()); }
(rule__X__Group__0)
{ after(grammarAccess.getXAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleZ
entryRuleZ 
:
{ before(grammarAccess.getZRule()); }
	 ruleZ
{ after(grammarAccess.getZRule()); } 
	 EOF 
;

// Rule Z
ruleZ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getZAccess().getGroup()); }
(rule__Z__Group__0)
{ after(grammarAccess.getZAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleY1
entryRuleY1 
:
{ before(grammarAccess.getY1Rule()); }
	 ruleY1
{ after(grammarAccess.getY1Rule()); } 
	 EOF 
;

// Rule Y1
ruleY1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getY1Access().getGroup()); }
(rule__Y1__Group__0)
{ after(grammarAccess.getY1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleY2
entryRuleY2 
:
{ before(grammarAccess.getY2Rule()); }
	 ruleY2
{ after(grammarAccess.getY2Rule()); } 
	 EOF 
;

// Rule Y2
ruleY2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getY2Access().getGroup()); }
(rule__Y2__Group__0)
{ after(grammarAccess.getY2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Y__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYAccess().getY1ParserRuleCall_0()); }
	ruleY1
{ after(grammarAccess.getYAccess().getY1ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getYAccess().getY2ParserRuleCall_1()); }
	ruleY2
{ after(grammarAccess.getYAccess().getY2ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__X__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getIsA1Assignment_2_0()); }
(rule__X__IsA1Assignment_2_0)
{ after(grammarAccess.getXAccess().getIsA1Assignment_2_0()); }
)

    |(
{ before(grammarAccess.getXAccess().getIsA2Assignment_2_1()); }
(rule__X__IsA2Assignment_2_1)
{ after(grammarAccess.getXAccess().getIsA2Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Root__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getSRootAction_0()); }
(

)
{ after(grammarAccess.getRootAccess().getSRootAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__1__Impl
	rule__Root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getRootKeyword_1()); }

	'Root' 

{ after(grammarAccess.getRootAccess().getRootKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__2__Impl
	rule__Root__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRootAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__3__Impl
	rule__Root__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getOwnedXAssignment_3()); }
(rule__Root__OwnedXAssignment_3)*
{ after(grammarAccess.getRootAccess().getOwnedXAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRootAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__X__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__0__Impl
	rule__X__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getXAction_0()); }
(

)
{ after(grammarAccess.getXAccess().getXAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__X__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__1__Impl
	rule__X__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getXKeyword_1()); }

	'X' 

{ after(grammarAccess.getXAccess().getXKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__X__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__2__Impl
	rule__X__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getAlternatives_2()); }
(rule__X__Alternatives_2)?
{ after(grammarAccess.getXAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__X__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__3__Impl
	rule__X__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getXAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__X__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__4__Impl
	rule__X__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getOwnsYAssignment_4()); }
(rule__X__OwnsYAssignment_4)*
{ after(grammarAccess.getXAccess().getOwnsYAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__X__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__X__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__X__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getXAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Z__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Z__Group__0__Impl
	rule__Z__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Z__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZAccess().getZAction_0()); }
(

)
{ after(grammarAccess.getZAccess().getZAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Z__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Z__Group__1__Impl
	rule__Z__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Z__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZAccess().getZKeyword_1()); }

	'Z' 

{ after(grammarAccess.getZAccess().getZKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Z__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Z__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Z__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZAccess().getNameAssignment_2()); }
(rule__Z__NameAssignment_2)?
{ after(grammarAccess.getZAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Y1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y1__Group__0__Impl
	rule__Y1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getY1Keyword_0()); }

	'Y1' 

{ after(grammarAccess.getY1Access().getY1Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y1__Group__1__Impl
	rule__Y1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getNameAssignment_1()); }
(rule__Y1__NameAssignment_1)
{ after(grammarAccess.getY1Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y1__Group__2__Impl
	rule__Y1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getY1Access().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y1__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y1__Group__3__Impl
	rule__Y1__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getOwnsZAssignment_3()); }
(rule__Y1__OwnsZAssignment_3)?
{ after(grammarAccess.getY1Access().getOwnsZAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y1__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y1__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getY1Access().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Y2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y2__Group__0__Impl
	rule__Y2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getY2Keyword_0()); }

	'Y2' 

{ after(grammarAccess.getY2Access().getY2Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y2__Group__1__Impl
	rule__Y2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getNameAssignment_1()); }
(rule__Y2__NameAssignment_1)
{ after(grammarAccess.getY2Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y2__Group__2__Impl
	rule__Y2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getY2Access().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y2__Group__3__Impl
	rule__Y2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getOwnsZAssignment_3()); }
(rule__Y2__OwnsZAssignment_3)?
{ after(grammarAccess.getY2Access().getOwnsZAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Y2__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Y2__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getY2Access().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Root__OwnedXAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getOwnedXXParserRuleCall_3_0()); }
	ruleX{ after(grammarAccess.getRootAccess().getOwnedXXParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__X__IsA1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getIsA1IsA1Keyword_2_0_0()); }
(
{ before(grammarAccess.getXAccess().getIsA1IsA1Keyword_2_0_0()); }

	'isA1' 

{ after(grammarAccess.getXAccess().getIsA1IsA1Keyword_2_0_0()); }
)

{ after(grammarAccess.getXAccess().getIsA1IsA1Keyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__X__IsA2Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getIsA2IsA2Keyword_2_1_0()); }
(
{ before(grammarAccess.getXAccess().getIsA2IsA2Keyword_2_1_0()); }

	'isA2' 

{ after(grammarAccess.getXAccess().getIsA2IsA2Keyword_2_1_0()); }
)

{ after(grammarAccess.getXAccess().getIsA2IsA2Keyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__X__OwnsYAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAccess().getOwnsYYParserRuleCall_4_0()); }
	ruleY{ after(grammarAccess.getXAccess().getOwnsYYParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Z__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getZAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getZAccess().getNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getY1Access().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Y1__OwnsZAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY1Access().getOwnsZZParserRuleCall_3_0()); }
	ruleZ{ after(grammarAccess.getY1Access().getOwnsZZParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getY2Access().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Y2__OwnsZAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getY2Access().getOwnsZZParserRuleCall_3_0()); }
	ruleZ{ after(grammarAccess.getY2Access().getOwnsZZParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


