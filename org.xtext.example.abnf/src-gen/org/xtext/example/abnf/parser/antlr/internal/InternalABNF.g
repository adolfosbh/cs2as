/*
 * generated by Xtext 2.10.0
 */
grammar InternalABNF;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.abnf.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.abnf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.abnf.services.ABNFGrammarAccess;

}

@parser::members {

 	private ABNFGrammarAccess grammarAccess;

    public InternalABNFParser(TokenStream input, ABNFGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "abnf_definition";
   	}

   	@Override
   	protected ABNFGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleabnf_definition
entryRuleabnf_definition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbnf_definitionRule()); }
	iv_ruleabnf_definition=ruleabnf_definition
	{ $current=$iv_ruleabnf_definition.current; }
	EOF;

// Rule abnf_definition
ruleabnf_definition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAbnf_definitionAccess().getAbnf_definitionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAbnf_definitionAccess().getRulesRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=rulerule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbnf_definitionRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"org.xtext.example.abnf.ABNF.rule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulerule
entryRulerule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_rulerule=rulerule
	{ $current=$iv_rulerule.current; }
	EOF;

// Rule rule
rulerule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRuleAccess().getHierarchy_ruleParserRuleCall_0());
		}
		this_hierarchy_rule_0=rulehierarchy_rule
		{
			$current = $this_hierarchy_rule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRuleAccess().getSpecification_ruleParserRuleCall_1());
		}
		this_specification_rule_1=rulespecification_rule
		{
			$current = $this_specification_rule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulehierarchy_rule
entryRulehierarchy_rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHierarchy_ruleRule()); }
	iv_rulehierarchy_rule=rulehierarchy_rule
	{ $current=$iv_rulehierarchy_rule.current; }
	EOF;

// Rule hierarchy_rule
rulehierarchy_rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHierarchy_ruleAccess().getClassIdClassIdParserRuleCall_0_0());
				}
				lv_classId_0_0=ruleclassId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHierarchy_ruleRule());
					}
					set(
						$current,
						"classId",
						lv_classId_0_0,
						"org.xtext.example.abnf.ABNF.classId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_DOUBLEARROW_1=RULE_DOUBLEARROW
			{
				newLeafNode(this_DOUBLEARROW_1, grammarAccess.getHierarchy_ruleAccess().getDOUBLEARROWTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHierarchy_ruleAccess().getSubclassIdSubclassIdParserRuleCall_1_1_0());
					}
					lv_subclassId_2_0=rulesubclassId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHierarchy_ruleRule());
						}
						add(
							$current,
							"subclassId",
							lv_subclassId_2_0,
							"org.xtext.example.abnf.ABNF.subclassId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getHierarchy_ruleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulespecification_rule
entryRulespecification_rule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecification_ruleRule()); }
	iv_rulespecification_rule=rulespecification_rule
	{ $current=$iv_rulespecification_rule.current; }
	EOF;

// Rule specification_rule
rulespecification_rule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecification_ruleAccess().getClassIdClassIdParserRuleCall_0_0());
				}
				lv_classId_0_0=ruleclassId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecification_ruleRule());
					}
					set(
						$current,
						"classId",
						lv_classId_0_0,
						"org.xtext.example.abnf.ABNF.classId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ARROW_1=RULE_ARROW
		{
			newLeafNode(this_ARROW_1, grammarAccess.getSpecification_ruleAccess().getARROWTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecification_ruleAccess().getAttributeAttributeParserRuleCall_2_0());
				}
				lv_attribute_2_0=ruleattribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecification_ruleRule());
					}
					add(
						$current,
						"attribute",
						lv_attribute_2_0,
						"org.xtext.example.abnf.ABNF.attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpecification_ruleAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleclassId
entryRuleclassId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassIdRule()); }
	iv_ruleclassId=ruleclassId
	{ $current=$iv_ruleclassId.current; }
	EOF;

// Rule classId
ruleclassId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_id_0_0=RULE_ID
			{
				newLeafNode(lv_id_0_0, grammarAccess.getClassIdAccess().getIdIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassIdRule());
				}
				setWithLastConsumed(
					$current,
					"id",
					lv_id_0_0,
					"org.xtext.example.abnf.ABNF.ID");
			}
		)
	)
;

// Entry rule entryRulesubclassId
entryRulesubclassId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubclassIdRule()); }
	iv_rulesubclassId=rulesubclassId
	{ $current=$iv_rulesubclassId.current; }
	EOF;

// Rule subclassId
rulesubclassId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getSubclassIdAccess().getIdIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubclassIdRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.xtext.example.abnf.ABNF.ID");
				}
			)
		)
		    |
		(
			(
				(
					lv_isAbstract_1_0=RULE_ABSTRACT
					{
						newLeafNode(lv_isAbstract_1_0, grammarAccess.getSubclassIdAccess().getIsAbstractABSTRACTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubclassIdRule());
						}
						setWithLastConsumed(
							$current,
							"isAbstract",
							true,
							"org.xtext.example.abnf.ABNF.ABSTRACT");
					}
				)
			)
			(
				(
					lv_id_2_0=RULE_ID
					{
						newLeafNode(lv_id_2_0, grammarAccess.getSubclassIdAccess().getIdIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubclassIdRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_2_0,
							"org.xtext.example.abnf.ABNF.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleattribute
entryRuleattribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleattribute=ruleattribute
	{ $current=$iv_ruleattribute.current; }
	EOF;

// Rule attribute
ruleattribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_OPTA_0_0='['
				{
					newLeafNode(lv_OPTA_0_0, grammarAccess.getAttributeAccess().getOPTALeftSquareBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "OPTA", lv_OPTA_0_0, "[");
				}
			)
		)?
		(
			(
				lv_SEM_1_0='<'
				{
					newLeafNode(lv_SEM_1_0, grammarAccess.getAttributeAccess().getSEMLessThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed($current, "SEM", lv_SEM_1_0, "<");
				}
			)
		)?
		(
			(
				lv_NAME_2_0=RULE_ID
				{
					newLeafNode(lv_NAME_2_0, grammarAccess.getAttributeAccess().getNAMEIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"NAME",
						lv_NAME_2_0,
						"org.xtext.example.abnf.ABNF.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getColonKeyword_3());
		}
		(
			(
				lv_TYPE_4_0=RULE_ID
				{
					newLeafNode(lv_TYPE_4_0, grammarAccess.getAttributeAccess().getTYPEIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"TYPE",
						lv_TYPE_4_0,
						"org.xtext.example.abnf.ABNF.ID");
				}
			)
		)
		(
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getGreaterThanSignKeyword_5());
			}
		)?
		(
			(
				(
					lv_MULTA_6_0='*'
					{
						newLeafNode(lv_MULTA_6_0, grammarAccess.getAttributeAccess().getMULTAAsteriskKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "MULTA", lv_MULTA_6_0, "*");
					}
				)
			)
			    |
			(
				(
					lv_MULTB_7_0='+'
					{
						newLeafNode(lv_MULTB_7_0, grammarAccess.getAttributeAccess().getMULTBPlusSignKeyword_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "MULTB", lv_MULTB_7_0, "+");
					}
				)
			)
			    |
			(
				(
					lv_OPTB_8_0='?'
					{
						newLeafNode(lv_OPTB_8_0, grammarAccess.getAttributeAccess().getOPTBQuestionMarkKeyword_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed($current, "OPTB", lv_OPTB_8_0, "?");
					}
				)
			)
		)?
		(
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_7());
			}
		)?
	)
;

RULE_ABSTRACT : '!';

RULE_ARROW : '->';

RULE_DOUBLEARROW : '=>';

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$'|'#'|'-')*;

RULE_WS : (' '|'\t'|'\n'|'\r')+;
