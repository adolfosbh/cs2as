/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.plsql.dDL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.plsql.dDL.Alter_table;
import org.xtext.example.plsql.dDL.Colname;
import org.xtext.example.plsql.dDL.Column;
import org.xtext.example.plsql.dDL.Comment;
import org.xtext.example.plsql.dDL.Constraint;
import org.xtext.example.plsql.dDL.Create_sequence;
import org.xtext.example.plsql.dDL.Create_table;
import org.xtext.example.plsql.dDL.DDLFactory;
import org.xtext.example.plsql.dDL.DDLPackage;
import org.xtext.example.plsql.dDL.Data_definition;
import org.xtext.example.plsql.dDL.Definition;
import org.xtext.example.plsql.dDL.Foreign_key;
import org.xtext.example.plsql.dDL.Key;
import org.xtext.example.plsql.dDL.Primary_key;
import org.xtext.example.plsql.dDL.Sequence_options;
import org.xtext.example.plsql.dDL.Tabname;
import org.xtext.example.plsql.dDL.Unique_key;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DDLPackageImpl extends EPackageImpl implements DDLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass data_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass create_tableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass columnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alter_tableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass create_sequenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sequence_optionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constraintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primary_keyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unique_keyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass foreign_keyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass colnameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tabnameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass isnullEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.plsql.dDL.DDLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DDLPackageImpl()
  {
    super(eNS_URI, DDLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DDLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DDLPackage init()
  {
    if (isInited) return (DDLPackage)EPackage.Registry.INSTANCE.getEPackage(DDLPackage.eNS_URI);

    // Obtain or create and register package
    DDLPackageImpl theDDLPackage = (DDLPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DDLPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DDLPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theDDLPackage.createPackageContents();

    // Initialize created meta-data
    theDDLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDDLPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DDLPackage.eNS_URI, theDDLPackage);
    return theDDLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getData_definition()
  {
    return data_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getData_definition_Definitions()
  {
    return (EReference)data_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefinition()
  {
    return definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreate_table()
  {
    return create_tableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreate_table_Id()
  {
    return (EAttribute)create_tableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreate_table_Columns()
  {
    return (EReference)create_tableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreate_table_Constraints()
  {
    return (EReference)create_tableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getColumn()
  {
    return columnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getColumn_Id()
  {
    return (EAttribute)columnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getColumn_Type()
  {
    return (EReference)columnEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getColumn_Number()
  {
    return (EAttribute)columnEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getColumn_IsNull()
  {
    return (EReference)columnEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAlter_table()
  {
    return alter_tableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAlter_table_Tabname()
  {
    return (EReference)alter_tableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAlter_table_Add()
  {
    return (EAttribute)alter_tableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAlter_table_Constraint()
  {
    return (EReference)alter_tableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAlter_table_Enable()
  {
    return (EAttribute)alter_tableEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAlter_table_Id()
  {
    return (EAttribute)alter_tableEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getComment()
  {
    return commentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComment_Tabname()
  {
    return (EReference)commentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getComment_ColumnId()
  {
    return (EAttribute)commentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComment_Colname()
  {
    return (EReference)commentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getComment_String()
  {
    return (EAttribute)commentEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCreate_sequence()
  {
    return create_sequenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCreate_sequence_Id()
  {
    return (EAttribute)create_sequenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCreate_sequence_Sequence_options()
  {
    return (EReference)create_sequenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSequence_options()
  {
    return sequence_optionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Increment()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Start()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Maxvalue()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Nomaxvalue()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Minvalue()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Nominvalue()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Cycle()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Nocycle()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Cache()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Nocache()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Order()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequence_options_Noorder()
  {
    return (EAttribute)sequence_optionsEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConstraint()
  {
    return constraintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConstraint_Id()
  {
    return (EAttribute)constraintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConstraint_Key()
  {
    return (EReference)constraintEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getKey()
  {
    return keyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getKey_ColNames()
  {
    return (EReference)keyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimary_key()
  {
    return primary_keyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnique_key()
  {
    return unique_keyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getForeign_key()
  {
    return foreign_keyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getForeign_key_Tabname()
  {
    return (EReference)foreign_keyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getColname()
  {
    return colnameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getColname_Id()
  {
    return (EAttribute)colnameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTabname()
  {
    return tabnameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTabname_Id()
  {
    return (EAttribute)tabnameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTabname_Basename()
  {
    return (EAttribute)tabnameEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getISNULL()
  {
    return isnullEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getISNULL_Null()
  {
    return (EAttribute)isnullEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getISNULL_NonNull()
  {
    return (EAttribute)isnullEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTYPE()
  {
    return typeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTYPE_Id()
  {
    return (EAttribute)typeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DDLFactory getDDLFactory()
  {
    return (DDLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    data_definitionEClass = createEClass(DATA_DEFINITION);
    createEReference(data_definitionEClass, DATA_DEFINITION__DEFINITIONS);

    definitionEClass = createEClass(DEFINITION);

    create_tableEClass = createEClass(CREATE_TABLE);
    createEAttribute(create_tableEClass, CREATE_TABLE__ID);
    createEReference(create_tableEClass, CREATE_TABLE__COLUMNS);
    createEReference(create_tableEClass, CREATE_TABLE__CONSTRAINTS);

    columnEClass = createEClass(COLUMN);
    createEAttribute(columnEClass, COLUMN__ID);
    createEReference(columnEClass, COLUMN__TYPE);
    createEAttribute(columnEClass, COLUMN__NUMBER);
    createEReference(columnEClass, COLUMN__IS_NULL);

    alter_tableEClass = createEClass(ALTER_TABLE);
    createEReference(alter_tableEClass, ALTER_TABLE__TABNAME);
    createEAttribute(alter_tableEClass, ALTER_TABLE__ADD);
    createEReference(alter_tableEClass, ALTER_TABLE__CONSTRAINT);
    createEAttribute(alter_tableEClass, ALTER_TABLE__ENABLE);
    createEAttribute(alter_tableEClass, ALTER_TABLE__ID);

    commentEClass = createEClass(COMMENT);
    createEReference(commentEClass, COMMENT__TABNAME);
    createEAttribute(commentEClass, COMMENT__COLUMN_ID);
    createEReference(commentEClass, COMMENT__COLNAME);
    createEAttribute(commentEClass, COMMENT__STRING);

    create_sequenceEClass = createEClass(CREATE_SEQUENCE);
    createEAttribute(create_sequenceEClass, CREATE_SEQUENCE__ID);
    createEReference(create_sequenceEClass, CREATE_SEQUENCE__SEQUENCE_OPTIONS);

    sequence_optionsEClass = createEClass(SEQUENCE_OPTIONS);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__INCREMENT);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__START);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__MAXVALUE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__NOMAXVALUE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__MINVALUE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__NOMINVALUE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__CYCLE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__NOCYCLE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__CACHE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__NOCACHE);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__ORDER);
    createEAttribute(sequence_optionsEClass, SEQUENCE_OPTIONS__NOORDER);

    constraintEClass = createEClass(CONSTRAINT);
    createEAttribute(constraintEClass, CONSTRAINT__ID);
    createEReference(constraintEClass, CONSTRAINT__KEY);

    keyEClass = createEClass(KEY);
    createEReference(keyEClass, KEY__COL_NAMES);

    primary_keyEClass = createEClass(PRIMARY_KEY);

    unique_keyEClass = createEClass(UNIQUE_KEY);

    foreign_keyEClass = createEClass(FOREIGN_KEY);
    createEReference(foreign_keyEClass, FOREIGN_KEY__TABNAME);

    colnameEClass = createEClass(COLNAME);
    createEAttribute(colnameEClass, COLNAME__ID);

    tabnameEClass = createEClass(TABNAME);
    createEAttribute(tabnameEClass, TABNAME__ID);
    createEAttribute(tabnameEClass, TABNAME__BASENAME);

    isnullEClass = createEClass(ISNULL);
    createEAttribute(isnullEClass, ISNULL__NULL);
    createEAttribute(isnullEClass, ISNULL__NON_NULL);

    typeEClass = createEClass(TYPE);
    createEAttribute(typeEClass, TYPE__ID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    create_tableEClass.getESuperTypes().add(this.getDefinition());
    alter_tableEClass.getESuperTypes().add(this.getDefinition());
    commentEClass.getESuperTypes().add(this.getDefinition());
    create_sequenceEClass.getESuperTypes().add(this.getDefinition());
    primary_keyEClass.getESuperTypes().add(this.getKey());
    unique_keyEClass.getESuperTypes().add(this.getKey());
    foreign_keyEClass.getESuperTypes().add(this.getKey());

    // Initialize classes and features; add operations and parameters
    initEClass(data_definitionEClass, Data_definition.class, "Data_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getData_definition_Definitions(), this.getDefinition(), null, "definitions", null, 0, -1, Data_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(definitionEClass, Definition.class, "Definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(create_tableEClass, Create_table.class, "Create_table", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreate_table_Id(), ecorePackage.getEString(), "id", null, 0, 1, Create_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreate_table_Columns(), this.getColumn(), null, "columns", null, 0, -1, Create_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreate_table_Constraints(), this.getConstraint(), null, "constraints", null, 0, -1, Create_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(columnEClass, Column.class, "Column", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getColumn_Id(), ecorePackage.getEString(), "id", null, 0, 1, Column.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getColumn_Type(), this.getTYPE(), null, "type", null, 0, 1, Column.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getColumn_Number(), ecorePackage.getEInt(), "number", null, 0, 1, Column.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getColumn_IsNull(), this.getISNULL(), null, "isNull", null, 0, 1, Column.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(alter_tableEClass, Alter_table.class, "Alter_table", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAlter_table_Tabname(), this.getTabname(), null, "tabname", null, 0, 1, Alter_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAlter_table_Add(), ecorePackage.getEString(), "add", null, 0, 1, Alter_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlter_table_Constraint(), this.getConstraint(), null, "constraint", null, 0, 1, Alter_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAlter_table_Enable(), ecorePackage.getEString(), "enable", null, 0, 1, Alter_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAlter_table_Id(), ecorePackage.getEString(), "id", null, 0, 1, Alter_table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commentEClass, Comment.class, "Comment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComment_Tabname(), this.getTabname(), null, "tabname", null, 0, 1, Comment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComment_ColumnId(), ecorePackage.getEString(), "columnId", null, 0, 1, Comment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComment_Colname(), this.getColname(), null, "colname", null, 0, 1, Comment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComment_String(), ecorePackage.getEString(), "string", null, 0, 1, Comment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(create_sequenceEClass, Create_sequence.class, "Create_sequence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreate_sequence_Id(), ecorePackage.getEString(), "id", null, 0, 1, Create_sequence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCreate_sequence_Sequence_options(), this.getSequence_options(), null, "sequence_options", null, 0, -1, Create_sequence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sequence_optionsEClass, Sequence_options.class, "Sequence_options", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSequence_options_Increment(), ecorePackage.getEString(), "increment", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Start(), ecorePackage.getEString(), "start", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Maxvalue(), ecorePackage.getEString(), "maxvalue", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Nomaxvalue(), ecorePackage.getEString(), "nomaxvalue", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Minvalue(), ecorePackage.getEString(), "minvalue", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Nominvalue(), ecorePackage.getEString(), "nominvalue", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Cycle(), ecorePackage.getEString(), "cycle", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Nocycle(), ecorePackage.getEString(), "nocycle", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Cache(), ecorePackage.getEString(), "cache", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Nocache(), ecorePackage.getEString(), "nocache", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Order(), ecorePackage.getEString(), "order", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequence_options_Noorder(), ecorePackage.getEString(), "noorder", null, 0, 1, Sequence_options.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constraintEClass, Constraint.class, "Constraint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConstraint_Id(), ecorePackage.getEString(), "id", null, 0, 1, Constraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConstraint_Key(), this.getKey(), null, "key", null, 0, 1, Constraint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(keyEClass, Key.class, "Key", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getKey_ColNames(), this.getColname(), null, "colNames", null, 0, -1, Key.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primary_keyEClass, Primary_key.class, "Primary_key", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(unique_keyEClass, Unique_key.class, "Unique_key", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(foreign_keyEClass, Foreign_key.class, "Foreign_key", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getForeign_key_Tabname(), this.getTabname(), null, "tabname", null, 0, 1, Foreign_key.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(colnameEClass, Colname.class, "Colname", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getColname_Id(), ecorePackage.getEString(), "id", null, 0, 1, Colname.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tabnameEClass, Tabname.class, "Tabname", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTabname_Id(), ecorePackage.getEString(), "id", null, 0, 1, Tabname.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTabname_Basename(), ecorePackage.getEString(), "basename", null, 0, 1, Tabname.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(isnullEClass, org.xtext.example.plsql.dDL.ISNULL.class, "ISNULL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getISNULL_Null(), ecorePackage.getEBoolean(), "null", null, 0, 1, org.xtext.example.plsql.dDL.ISNULL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getISNULL_NonNull(), ecorePackage.getEBoolean(), "nonNull", null, 0, 1, org.xtext.example.plsql.dDL.ISNULL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeEClass, org.xtext.example.plsql.dDL.TYPE.class, "TYPE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTYPE_Id(), ecorePackage.getEString(), "id", null, 0, 1, org.xtext.example.plsql.dDL.TYPE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DDLPackageImpl
