/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.plsql.dDL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.plsql.dDL.DDLPackage;
import org.xtext.example.plsql.dDL.Sequence_options;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sequence options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getIncrement <em>Increment</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getStart <em>Start</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getMaxvalue <em>Maxvalue</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getNomaxvalue <em>Nomaxvalue</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getMinvalue <em>Minvalue</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getNominvalue <em>Nominvalue</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getCycle <em>Cycle</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getNocycle <em>Nocycle</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getCache <em>Cache</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getNocache <em>Nocache</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getOrder <em>Order</em>}</li>
 *   <li>{@link org.xtext.example.plsql.dDL.impl.Sequence_optionsImpl#getNoorder <em>Noorder</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Sequence_optionsImpl extends MinimalEObjectImpl.Container implements Sequence_options
{
  /**
   * The default value of the '{@link #getIncrement() <em>Increment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncrement()
   * @generated
   * @ordered
   */
  protected static final String INCREMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIncrement() <em>Increment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncrement()
   * @generated
   * @ordered
   */
  protected String increment = INCREMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected static final String START_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected String start = START_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxvalue() <em>Maxvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxvalue()
   * @generated
   * @ordered
   */
  protected static final String MAXVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaxvalue() <em>Maxvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxvalue()
   * @generated
   * @ordered
   */
  protected String maxvalue = MAXVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getNomaxvalue() <em>Nomaxvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomaxvalue()
   * @generated
   * @ordered
   */
  protected static final String NOMAXVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNomaxvalue() <em>Nomaxvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomaxvalue()
   * @generated
   * @ordered
   */
  protected String nomaxvalue = NOMAXVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getMinvalue() <em>Minvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinvalue()
   * @generated
   * @ordered
   */
  protected static final String MINVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinvalue() <em>Minvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinvalue()
   * @generated
   * @ordered
   */
  protected String minvalue = MINVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getNominvalue() <em>Nominvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNominvalue()
   * @generated
   * @ordered
   */
  protected static final String NOMINVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNominvalue() <em>Nominvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNominvalue()
   * @generated
   * @ordered
   */
  protected String nominvalue = NOMINVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getCycle() <em>Cycle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCycle()
   * @generated
   * @ordered
   */
  protected static final String CYCLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCycle() <em>Cycle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCycle()
   * @generated
   * @ordered
   */
  protected String cycle = CYCLE_EDEFAULT;

  /**
   * The default value of the '{@link #getNocycle() <em>Nocycle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNocycle()
   * @generated
   * @ordered
   */
  protected static final String NOCYCLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNocycle() <em>Nocycle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNocycle()
   * @generated
   * @ordered
   */
  protected String nocycle = NOCYCLE_EDEFAULT;

  /**
   * The default value of the '{@link #getCache() <em>Cache</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCache()
   * @generated
   * @ordered
   */
  protected static final String CACHE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCache() <em>Cache</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCache()
   * @generated
   * @ordered
   */
  protected String cache = CACHE_EDEFAULT;

  /**
   * The default value of the '{@link #getNocache() <em>Nocache</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNocache()
   * @generated
   * @ordered
   */
  protected static final String NOCACHE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNocache() <em>Nocache</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNocache()
   * @generated
   * @ordered
   */
  protected String nocache = NOCACHE_EDEFAULT;

  /**
   * The default value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected static final String ORDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected String order = ORDER_EDEFAULT;

  /**
   * The default value of the '{@link #getNoorder() <em>Noorder</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoorder()
   * @generated
   * @ordered
   */
  protected static final String NOORDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNoorder() <em>Noorder</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoorder()
   * @generated
   * @ordered
   */
  protected String noorder = NOORDER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Sequence_optionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DDLPackage.Literals.SEQUENCE_OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIncrement()
  {
    return increment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIncrement(String newIncrement)
  {
    String oldIncrement = increment;
    increment = newIncrement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__INCREMENT, oldIncrement, increment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStart()
  {
    return start;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStart(String newStart)
  {
    String oldStart = start;
    start = newStart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__START, oldStart, start));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMaxvalue()
  {
    return maxvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxvalue(String newMaxvalue)
  {
    String oldMaxvalue = maxvalue;
    maxvalue = newMaxvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__MAXVALUE, oldMaxvalue, maxvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNomaxvalue()
  {
    return nomaxvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNomaxvalue(String newNomaxvalue)
  {
    String oldNomaxvalue = nomaxvalue;
    nomaxvalue = newNomaxvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__NOMAXVALUE, oldNomaxvalue, nomaxvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMinvalue()
  {
    return minvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinvalue(String newMinvalue)
  {
    String oldMinvalue = minvalue;
    minvalue = newMinvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__MINVALUE, oldMinvalue, minvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNominvalue()
  {
    return nominvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNominvalue(String newNominvalue)
  {
    String oldNominvalue = nominvalue;
    nominvalue = newNominvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__NOMINVALUE, oldNominvalue, nominvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCycle()
  {
    return cycle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCycle(String newCycle)
  {
    String oldCycle = cycle;
    cycle = newCycle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__CYCLE, oldCycle, cycle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNocycle()
  {
    return nocycle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNocycle(String newNocycle)
  {
    String oldNocycle = nocycle;
    nocycle = newNocycle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__NOCYCLE, oldNocycle, nocycle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCache()
  {
    return cache;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCache(String newCache)
  {
    String oldCache = cache;
    cache = newCache;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__CACHE, oldCache, cache));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNocache()
  {
    return nocache;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNocache(String newNocache)
  {
    String oldNocache = nocache;
    nocache = newNocache;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__NOCACHE, oldNocache, nocache));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOrder()
  {
    return order;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOrder(String newOrder)
  {
    String oldOrder = order;
    order = newOrder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__ORDER, oldOrder, order));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNoorder()
  {
    return noorder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNoorder(String newNoorder)
  {
    String oldNoorder = noorder;
    noorder = newNoorder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DDLPackage.SEQUENCE_OPTIONS__NOORDER, oldNoorder, noorder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DDLPackage.SEQUENCE_OPTIONS__INCREMENT:
        return getIncrement();
      case DDLPackage.SEQUENCE_OPTIONS__START:
        return getStart();
      case DDLPackage.SEQUENCE_OPTIONS__MAXVALUE:
        return getMaxvalue();
      case DDLPackage.SEQUENCE_OPTIONS__NOMAXVALUE:
        return getNomaxvalue();
      case DDLPackage.SEQUENCE_OPTIONS__MINVALUE:
        return getMinvalue();
      case DDLPackage.SEQUENCE_OPTIONS__NOMINVALUE:
        return getNominvalue();
      case DDLPackage.SEQUENCE_OPTIONS__CYCLE:
        return getCycle();
      case DDLPackage.SEQUENCE_OPTIONS__NOCYCLE:
        return getNocycle();
      case DDLPackage.SEQUENCE_OPTIONS__CACHE:
        return getCache();
      case DDLPackage.SEQUENCE_OPTIONS__NOCACHE:
        return getNocache();
      case DDLPackage.SEQUENCE_OPTIONS__ORDER:
        return getOrder();
      case DDLPackage.SEQUENCE_OPTIONS__NOORDER:
        return getNoorder();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DDLPackage.SEQUENCE_OPTIONS__INCREMENT:
        setIncrement((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__START:
        setStart((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__MAXVALUE:
        setMaxvalue((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOMAXVALUE:
        setNomaxvalue((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__MINVALUE:
        setMinvalue((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOMINVALUE:
        setNominvalue((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__CYCLE:
        setCycle((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOCYCLE:
        setNocycle((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__CACHE:
        setCache((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOCACHE:
        setNocache((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__ORDER:
        setOrder((String)newValue);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOORDER:
        setNoorder((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DDLPackage.SEQUENCE_OPTIONS__INCREMENT:
        setIncrement(INCREMENT_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__START:
        setStart(START_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__MAXVALUE:
        setMaxvalue(MAXVALUE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOMAXVALUE:
        setNomaxvalue(NOMAXVALUE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__MINVALUE:
        setMinvalue(MINVALUE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOMINVALUE:
        setNominvalue(NOMINVALUE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__CYCLE:
        setCycle(CYCLE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOCYCLE:
        setNocycle(NOCYCLE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__CACHE:
        setCache(CACHE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOCACHE:
        setNocache(NOCACHE_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__ORDER:
        setOrder(ORDER_EDEFAULT);
        return;
      case DDLPackage.SEQUENCE_OPTIONS__NOORDER:
        setNoorder(NOORDER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DDLPackage.SEQUENCE_OPTIONS__INCREMENT:
        return INCREMENT_EDEFAULT == null ? increment != null : !INCREMENT_EDEFAULT.equals(increment);
      case DDLPackage.SEQUENCE_OPTIONS__START:
        return START_EDEFAULT == null ? start != null : !START_EDEFAULT.equals(start);
      case DDLPackage.SEQUENCE_OPTIONS__MAXVALUE:
        return MAXVALUE_EDEFAULT == null ? maxvalue != null : !MAXVALUE_EDEFAULT.equals(maxvalue);
      case DDLPackage.SEQUENCE_OPTIONS__NOMAXVALUE:
        return NOMAXVALUE_EDEFAULT == null ? nomaxvalue != null : !NOMAXVALUE_EDEFAULT.equals(nomaxvalue);
      case DDLPackage.SEQUENCE_OPTIONS__MINVALUE:
        return MINVALUE_EDEFAULT == null ? minvalue != null : !MINVALUE_EDEFAULT.equals(minvalue);
      case DDLPackage.SEQUENCE_OPTIONS__NOMINVALUE:
        return NOMINVALUE_EDEFAULT == null ? nominvalue != null : !NOMINVALUE_EDEFAULT.equals(nominvalue);
      case DDLPackage.SEQUENCE_OPTIONS__CYCLE:
        return CYCLE_EDEFAULT == null ? cycle != null : !CYCLE_EDEFAULT.equals(cycle);
      case DDLPackage.SEQUENCE_OPTIONS__NOCYCLE:
        return NOCYCLE_EDEFAULT == null ? nocycle != null : !NOCYCLE_EDEFAULT.equals(nocycle);
      case DDLPackage.SEQUENCE_OPTIONS__CACHE:
        return CACHE_EDEFAULT == null ? cache != null : !CACHE_EDEFAULT.equals(cache);
      case DDLPackage.SEQUENCE_OPTIONS__NOCACHE:
        return NOCACHE_EDEFAULT == null ? nocache != null : !NOCACHE_EDEFAULT.equals(nocache);
      case DDLPackage.SEQUENCE_OPTIONS__ORDER:
        return ORDER_EDEFAULT == null ? order != null : !ORDER_EDEFAULT.equals(order);
      case DDLPackage.SEQUENCE_OPTIONS__NOORDER:
        return NOORDER_EDEFAULT == null ? noorder != null : !NOORDER_EDEFAULT.equals(noorder);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (increment: ");
    result.append(increment);
    result.append(", start: ");
    result.append(start);
    result.append(", maxvalue: ");
    result.append(maxvalue);
    result.append(", nomaxvalue: ");
    result.append(nomaxvalue);
    result.append(", minvalue: ");
    result.append(minvalue);
    result.append(", nominvalue: ");
    result.append(nominvalue);
    result.append(", cycle: ");
    result.append(cycle);
    result.append(", nocycle: ");
    result.append(nocycle);
    result.append(", cache: ");
    result.append(cache);
    result.append(", nocache: ");
    result.append(nocache);
    result.append(", order: ");
    result.append(order);
    result.append(", noorder: ");
    result.append(noorder);
    result.append(')');
    return result.toString();
  }

} //Sequence_optionsImpl
